@using EagleEyes.Common
@{
    ViewBag.Title = "玉山雲端秘書";
    Layout = "~/Views/Shared/_Layout.cshtml";
    string userID = string.Empty;
    bool isLogin = Util.IsLogin(ref userID);
    if (isLogin) { }
    else
    {
        if (Request.Url.PathAndQuery.StartsWith(EagleEyes.Common.Util.LoginUrl)) { }
        else { this.Response.Redirect(EagleEyes.Common.Util.LoginUrl, true); }
    }
    string date = DateTime.Now.ToString("yyyy/MM/dd");
    string orderTime = DateTime.Now.ToString("HH:mm");
    string pp = Request["p"];
    bool isPriveVolumeMode = false;
    if (pp == "1")
    { isPriveVolumeMode = true; }
    string ip = Util.GetClientIpAddress(Request);
    string SA_CA_TYPE = Util.GetCookieValue(CookieKeys.SA_CA_TYPE);
    string passWord = string.Empty; //"cc616826";
    string DateString = System.DateTime.Now.ToString("yyyyMMdd");
    string CurrentTimeString = System.DateTime.Now.ToString("HH:mm:ss");
    string BeforeTimeString = System.DateTime.Now.AddMinutes(5).ToString("HH:mm:ss");
}
@section Style
{
    <link href="@Url.Content("~/Content/Web.css")" rel="stylesheet" type="text/css" />
    <link type="text/css" rel="stylesheet" href="@Url.Content("~/Content/TreeMenu.css")" />
    <link type="text/css" rel="stylesheet" href="@Url.Content("~/Content/OptionTMenu.css")" />
    <link rel="stylesheet" media="all" type="text/css" href="@Url.Content("~/css/dropdown.css")" />
    <link href="../css/personal.css" rel="stylesheet" type="text/css" />
    <style type="text/css">
        table
        {
            border-collapse: collapse; /* 'cellspacing' equivalent */
        }
        table td, table th
        {
            padding: 0; /* 'cellpadding' equivalent */
        }
        .divUserSymbolGroupItem
        {
            padding-left: 1px;
            padding-right: 1px; 
            cursor: pointer;
            float: left;
            text-align: center;width:70px;height:22px;
            background-image:url(@Url.Content("~/images/tab_bg.gif"));
        }
        .divUserSymbolGroupSelectedItem
        {
            padding-left: 1px;
            padding-right: 1px;
            cursor: pointer;
            float: left;
            text-align: center;width:70px;height:22px;
            color:black;            
            font-weight:bold;
            background-image:url(@Url.Content("~/images/tab_bg_press.gif"));
        }
        .ConditionTitle
        {
            width: 80px;
            height: 30px;
            float: left;
        }
        .ConditionValue
        {
            width: 50px;
            float: left;
        }
        .ConditonValueRange
        {
            height: 30px;
        }
        .OrderBoxNone
        {
            background: #F0F0F0;
        }
        .OrderBoxBuy
        {
            background: #FF9999;
        }
        .OrderBoxSell
        {
            background: #6699FF;
        }
        .UserSymbolItem
        {
            background:#FFFFFF;
            cursor: pointer;
        }
        .UserSymbolItem:hover
        {
            background:#D2E9FF;
            color: red;
        }
        .UserSymbolItemSelected
        {
            background:#ACD6FF;
            
            cursor: pointer;
        }
        .UserRegisterSymbolItem
        {
            margin-left: 5px;
            margin-top: 5px;
            cursor: pointer;
            background:#FFFFFF;
        }
        .UserRegisterSymbolItem:hover
        {
            background: #add8e6;
            color: red;
        }
        .UserRegisterSymbolItemSelected
        {
            background: #e0e0e0;
            margin-left: 5px;
            margin-top: 5px;
            cursor: pointer;
            color: red;
        }
        .PriceFlagItem
        {
           
            font-size: 10pt;
            cursor: pointer;
            text-align:left;  
            height:20px;
        }
        .PriceFlagItem:hover
        {
            background: #FFFFCC;
        }
        .PriceFlagItemSelected
        {
            font-size: 10pt;
            background: lightyellow;
            cursor: pointer;
            text-align:left; 
               height:20px;
        }
        .CheckPassword
        {
            background: lightyellow;
        }
        .QuotationTitle
        {
            background: #009893;
            text-align: center;
        }
        .QuotationNone
        {
            padding-left: 5px;
            padding-right: 5px;
            border-right:1px solid black;
            border-bottom:1px solid black;
        }
        .QuotationUp
        {
            text-align: right;
            color: Red;
            padding-left: 5px;
            padding-right: 5px;
            border-right:1px solid black;
            border-bottom:1px solid black;
        }
        .QuotationUpLimit
        {
            text-align: right;
            color: white;
            background: red;
            padding-left: 5px;
            padding-right: 5px;
            border-right:1px solid black;
            border-bottom:1px solid black;
        }
        .QuotationDown
        {
            text-align: right;
            color: Green;
            padding-left: 5px;
            padding-right: 5px;
            border-right:1px solid black;
            border-bottom:1px solid black;
        }
        .QuotationDownLimit
        {
            text-align: right;
            color: white;
            background: green;
            padding-left: 5px;
            padding-right: 5px;
            border-right:1px solid black;
            border-bottom:1px solid black;
        }
        .line1
        {
            background-image: url(images/personal_line_c.jpg);
        }
        .line2
        {
            background-image: url(images/personal_line_c01.jpg);
        }
        .txt_e
        {
            font-size: 12px;
            line-height: 18px;
            color: #F00;
        }
        .txt_f
        {
            font-size: 12px;
            line-height: 18px;
            color: #090;
        }
        body
        {
            background: url(images/bg_index_fullscreen_2.jpg) left top no-repeat;
        }
    </style>
}
@section Script{
    <script src="@Url.Content("~/Scripts/TreeMenu.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/OptionTMenu.js")" type="text/javascript"></script>
    <script type="text/javascript">
        //不能下單商品不能用的條件id
        //買價、賣價
        var NotOrderNotUseConditions = ["1003", "1004", "1005", "1006"];
        //能下單商品不能使用的條件id
        //成交金額
        var OrderNotUseConditions = ["1008"];
        var $MenuXml;
        //是否為價量設定
        var IsPriceVolumeMode = '@isPriveVolumeMode';
        IsPriceVolumeMode = IsPriceVolumeMode.toLowerCase();
        var StockAccounts = [ ];
        var FutureAccounts = [ ];
        var IsCheckingSymbol = false;
		var _MARKET = "S";
        var UserID = "@userID";
        var MaxMonitorDays = @(EagleEyes.Properties.Settings.Default.MaxMonitorDays);
        var CA_AME = '';
        var GRPID = '0000';
        var SYSDATETIME = 'yyyyMMdd-HHmmss';
        SymbolBoxCancelFunc = function(){
            HideSymbolBox();
        };
        //前置函式
        function GetCookieValue(name) {
            var value = "; " + document.cookie;
            var parts = value.split("; " + name + "=");
            if (parts.length == 2) return parts.pop().split(";").shift();
        }
        //傳入步驟一證券或期權帳號$select，將orderbox帳號同步連動
        function SetOrderBoxAccount($slt){
            var id = $slt.attr("id");
            var account =  $slt.find("option:selected").html();
            if (id == "sltUserStockSumGroup") {
                $("#sltMarket option[value='S']").attr("selected", true);
                $("#sltMarket").change();
                $("#sltAccount option[value='" + account + "']").attr("selected", true);
            } else if (id == "sltUserFOSumGroup") {
				if(_MARKET == "F")
					$("#sltMarket option[value='F']").attr("selected", true);
				else
					$("#sltMarket option[value='O']").attr("selected", true);
                $("#sltMarket").change();
                $("#sltAccount option[value='" + account + "']").attr("selected", true);
            }
        }
        function AddButtonDisabled(State) {
            if (State) {
                $("#btnAdd").hide();
                $("#btnAddBusy").show();
                $("#btnAddSecond").hide();
                $("#btnAddSecondBusy").show();
            } else {
                $("#btnAddBusy").hide();
                $("#btnAdd").show();
                $("#btnAddSecondBusy").hide();
                $("#btnAddSecond").show();                    
            }
        }
        function Clear(skipRBOrder){
            for (var i = 0; i < 2; i++) {
                $("#txtConditionSymbolID").val("");
                $("#txtConditionSymbolName").val("");
                $("#hdConditionSymbolName").val("");
                $("#SymbolRadio").attr("checked", true);
                $("#txtSymbolBoxSearch").val("");
                $(".UserSymbolItemSelected").attr("class", "UserSymbolItem");
                $("[name='trCondition']").each(function () {
                    var $tr = $(this);
                    var value = $tr.find("[name='chkCondition']").val();
                    $tr.find("[name='chkCondition']").attr("checked", false);
                    $tr.find("[name='txtConditionValue']").val("");
                    $tr.find("[name='rb" + value + "']:first").attr("checked", true);
                    $tr.find("[name='chkCondition']").attr("disabled", false);
                    $tr.find("[name='txtConditionValue']").attr("disabled", false);
                    $tr.find("[name='rb" + value + "']").attr("disabled", false);
                });
                $("#rbDefaultWatchDateRange").attr("checked", true);
                $("#rbDefaultWatchDateRange").click();
                GetSMarketTime();
                $("[name='rbLTNotify'][value='1']").attr("checked", true);
                $("#rbDefaultStopRule").attr("checked", true);
                if(!skipRBOrder){
                    $("#rbNoOrder").attr("checked", true);
                    $("#rbNoOrder").click();  
                }
                $("#sltMarket option:first").attr("selected", true);
                $("#sltMarket").change();
                $("#txtOrderSymbolID").val("");
                $("#txtOrderSymbolName").val("");
                $("#hdOrderSymbolName").val("");
                $("#rbDefaultFOOrderType").attr("checked", true);
                $("#rbFTDTPAuto").attr("checked", true);
                $("#rbDefaultStockOrderType").attr("checked", true);
                $("#lblStockOrderTypeMargin1").show();
                $("#lblStockOrderTypeMargin2").show();
                $("#rbFUTPROD").attr("checked", true);
                $("#rbFOkOrderTypeLimitPrice").attr("checked", true);
                $("#txtQty").val("");
                $("#txtPrice").val("");
                $("#divPriceFlag > div").attr("class", "PriceFlagItem");
                //$("#divPriceFlag > div").attr("class", "PriceFlagItemSelected");
                $("#divPriceFlag > div:first").attr("class", "PriceFlagItemSelected");
                //$("#btnBuy").click();
                $("#divOrderBox").attr("class", "OrderBoxNone");
                $("#lblGetSymbolQuotationDateTime").html("");
                $("#divSymbolQuotation").html("");
                AddButtonDisabled(false);
            }
        }
        function CheckConditionSymbol(obj) {
            if (!IsCheckingSymbol) { 
                IsCheckingSymbol = true;
                if (obj.value.length > 2) {
                    var $node = $MenuXml.find("item[code='" + obj.value.toUpperCase() + "']");
                    if ($node.length > 0) {
                        var canDo = true;
                        if (!IsPriceVolumeMode){
                            var symbolMarket = GetSymbolMarket($node);
                            if(symbolMarket != "S" && symbolMarket != "E"){
                                canDo = false;
                            }
                        }
                        if (canDo) {
                            SetSymbolToConditionSymbol($node);
                            IsCheckingSymbol = false;
                            return;
                        }
                    }
                    alert("無此商品[" + obj.value.toUpperCase() + "]。");
                }
                $("#hdConditionSymbolMarket").val("");
                $("#txtConditionSymbolName").val("");
                IsCheckingSymbol = false;
            }
        }
        function CheckOrderSymbol(obj) {
            if (!IsCheckingSymbol) {
                IsCheckingSymbol = true;
                if (obj.value.length > 2) {
                    var $node = $MenuXml.find("item[code='" + obj.value.toUpperCase() + "']");
                    if ($node.length > 0) {
                        var market = $("#sltMarket").val();
                        var symbolMarket = GetSymbolMarket($node);
                        if (market == symbolMarket){
                            SetSymbolToOrderSymbol($node);
                            IsCheckingSymbol = false;
                            return true;
                        }
                    }
                    alert("無此商品[" + obj.value.toUpperCase() + "]。");
                }
                $("#hdOrderSymbolMarket").val("");
                IsCheckingSymbol = false;
            }
            return false;
        }
        function GetNowDate() {
            var date = new Date();
            var year = date.getFullYear();
            var month = date.getMonth();
            month+=1;
            var day = date.getDate();
            year = year.toString();
            month = month.toString();
            day = day.toString();
            var result = year + month + day;
            return result;
        }
        function GetNowTime(containSeconds){
            var date = new Date();
            var hh = date.getHours().toString();
            var mm = date.getMinutes().toString();
            var ss = "";
            if(hh.length < 2){
                hh = "0" + hh;
            }
            if(mm.length < 2){
                mm = "0" + mm;
            }
            if(containSeconds){
                ss = date.getSeconds().toString();
                if(ss.length < 2){
                    ss = "0" + ss;
                }
            }
            var time = hh + ":" + mm;
            if(containSeconds){
                time += ":" + ss;
            }
            return time;
        }
        var QuotationSymbolID = "";
        function SetSymbolToConditionSymbol($node) {
            Clear(true);
            $("#txtConditionSymbolID").val($node.attr("code").toUpperCase());
            $("#txtConditionSymbolName").val($node.attr("name"));
            var market = GetSymbolMarket($node);
            if (market == "") {
                alert("無市場別");
                return;
            }

			_MARKET = market;	
			
            QuotationSymbolID =$("#txtConditionSymbolID").val();
            if ((QuotationSymbolID == "001") | (QuotationSymbolID == "101")) { 
                if (IsPriceVolumeMode) { }
                else {
                    alert('此商品不可進行委託設定'); 
                    $("#txtConditionSymbolID").val("");
                    $("#txtConditionSymbolName").val("");
                    return;
                }
            }
            GetSymbolQuotation();
            var disabledConditions;
            switch (market) {
                case "I":
                    disabledConditions = NotOrderNotUseConditions;
                    break;
                default:
                    disabledConditions = OrderNotUseConditions;
                    break;
            }
            $("[name='trCondition']").each(function () {
                var $tr = $(this);
                var value = $tr.find("[name='chkCondition']").val();
                var index = $.inArray(value, disabledConditions);
                var isDisabled;
                if (index == -1) {
                    isDisabled = false;
                } else {
                    isDisabled = true;
                }
                $tr.find(":input").attr("disabled", isDisabled);
                $tr.find("[name='rb" + value + "']").attr("disabled", isDisabled);
            });
            $("#hdConditionSymbolMarket").val(market);
            SetConditionSymbolToOrderSymbol();
        }
        function SetConditionSymbolToOrderSymbol() {
            var canOrder = true;
            switch ($("#hdConditionSymbolMarket").val()) {
                case "S":
                    var $mkt = $("#sltMarket option[value='S']");
                    if($mkt.length > 0){
                        $mkt.attr("selected", true);
                    } else { return; }
                    break;
                case "E":
                    var $mkt = $("#sltMarket option[value='E']");
                    if($mkt.length > 0){
                        $mkt.attr("selected", true);
                    } else { return; }
                    break;
                case "F":
                    var $mkt = $("#sltMarket option[value='F']");
                    if($mkt.length > 0){
                        $mkt.attr("selected", true);
                    } else { return; }
                    break;
                case "O":
                    var $mkt = $("#sltMarket option[value='O']");
                    if($mkt.length > 0){
                        $mkt.attr("selected", true);
                    } else { return; }
                    break;
                default:
                    return;
            }
            $("#sltMarket").change();
            var $sltUserSumAccount= $("#divUserSymbols [name='sltUserSumAccount']:visible");
            if ($sltUserSumAccount.length > 0) {
                SetOrderBoxAccount($sltUserSumAccount);
            }
            if (canOrder) {               
                $("#txtOrderSymbolID").val($("#txtConditionSymbolID").val());
                $("#txtOrderSymbolName").val($("#txtConditionSymbolName").val());
                $("#hdOrderSymbolMarket").val($("#hdConditionSymbolMarket").val());                 
                $("#rbDoOrder:not(:checked)").attr("checked", true).click(); 
            } else {
                $("#rbNoOrder").attr("checked", true);
                $("#rbNoOrder").click();
            }
        }
        function GetSymbolMarket($node) {
            var $parent = $node.parent();
            while (true) {
                if ($parent.length > 0) {
                    var key = $parent.attr("key");
                    if (key != undefined && key != "") {
                        switch (key) {
                            case "stock":
                                return "S";
                                break;
                            case "emerging":
                                return "E";
                                break;
                            case "index":
                                return "I";
                                break;
                            case "future":
                                return "F";
                                break;
                            case "option":
                                return "O";
                                break;
                        }
                        break;
                    }
                    $parent = $parent.parent();
                } else {
                    return "";
                }
            }
        }
        function LoadInitUserSymbolList(){
            var $slt =$("#divUserSymbolCategoryGroup select:visible");
            var id = $slt.attr("id");
            switch(id)            {
                case "sltFavoriteGroup":
                    $("[name='divUserSymbolGroup_Favorite']").click();
                    break;
                case "sltUserStockSumGroup":
                    $("[name='divUserSymbolGroup_StockSum']").click();
                    break;
                case "sltUserFOSumGroup":
                    $("[name='divUserSymbolGroup_FOSum']").click();
                    break;
            }
        }
        function GetStockSum(accounts) {
            GetUserSymbol('@Url.Content("~/Data/ESUNStockSum")?Accounts=' + accounts, 
                $("#sltUserStockSumGroup"), 
                $("#divUserStockSumSymbolList"));
        }
        function GetFOSum(accounts) {
            GetUserSymbol('@Url.Content("~/Data/ESUNFOSum")?Accounts=' + accounts, 
                $("#sltUserFOSumGroup"), 
                $("#divUserFOSumSymbolList"));
        }
        function BuildUserSymbolList($div, symbols) {
            var sb = new StringBuilder();
            sb.append("<table  style=\"width:99%;\"  border=\"0\" align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tbList\">");
            sb.append("<tr class=\"txt_ff\">");
            sb.append("<td style=\"width:49%; height:22px\" align=\"center\" bgcolor=\"#009893\">代碼</td>");
            sb.append("<td style=\"width:50%;\" align=\"center\" bgcolor=\"#009893\">名稱</td>");
            sb.append("</tr>");
            sb.append("</table>");
            sb.append("<div style=\"width:100%; height: 265px; overflow-x: hidden; overflow-y: auto;\">");
            sb.append("<table  style=\"width:99%;\"  border=\"0\" align=\"center\" cellpadding=\"0\" cellspacing=\"0\" class=\"tbList\">");
            for (var ii = 0; ii < symbols.length; ii++) {
                var symbol = symbols[ii];
                sb.append("<tr class=\"UserSymbolItem\" SymbolID=\"" + symbol.SymbolID + "\" SymbolName=\"" + symbol.SymbolName + "\" Market=\"" + symbol.Market + "\" >");
                sb.append("<td>");
                sb.append(symbol.SymbolID);
                sb.append("</td>");
                sb.append("<td>");
                sb.append(symbol.SymbolName);
                sb.append("</td>");
                sb.append("</tr>");
            }
            sb.append("</table>");
            sb.append("</div>");
            $div.html(sb.toString());
            $div.find("tr.UserSymbolItem").click(function () {
                $div.find(".UserSymbolItemSelected").attr("class", "UserSymbolItem");
                var $obj = $(this);
                $obj.attr("class", "UserSymbolItemSelected");
                var $node = $MenuXml.find("item[code='" + $obj.attr("SymbolID") + "']");
                if ($node.length > 0) {
                    SetSymbolToConditionSymbol($node);
                } else {
                    alert("商品表內無此商品[" + $obj.attr("SymbolID") + "]");
                }
            });
        }
        function GetOrderContent() {
            var market = $("#hdOrderSymbolMarket").val();
            var orderType;
            if (market == "S" || market == "E") { orderType = $("#divStockOrderType [name='rbStockOrderType']:checked").val(); } 
            else { orderType = $("#divFOOrderType [name='rbFOkOrderType']:checked").val(); }
            var symbolID = $("#txtOrderSymbolID").val().toUpperCase();
            var symbolName = $("#txtOrderSymbolName").val();
            var accountParts = $("#sltAccount").val().split("-");
            var brokerID = accountParts[0];
            var account = accountParts[1];
            var priceFlag = "";
            var $priceFlag = $(".PriceFlagItemSelected");
            if ($priceFlag.length > 0) {
                priceFlag = $priceFlag.attr("value");
            }
            var price = $("#txtPrice").val();
            var qty = $("#txtQty").val();
            var bs = undefined;
            var bors = $("#divOrderBox").attr("class");
            switch (bors)
            {
                case "OrderBoxBuy": bs = "B"; break;
                case "OrderBoxSell": bs = "S"; break;
                default: bs = "N"; break;
            }
            var result = {
                Market: market,
                OrderType: orderType,
                SymbolID: symbolID,
                SymbolName: symbolName,
                BrokerID: brokerID,
                Account: account,
                PriceFlag: priceFlag,
                Price: price,
                Qty: qty,
                BS: bs
            };
            return result;
        }
        function BindingOrderBoxEvent() {
            //被remove後binding的事件也會跟著消失，所以要重新binding
            $('#txtOrderSymbolID').blur(function () {
                if (CheckOrderSymbol(this)) {
                    if (IsPriceVolumeMode) { }
                    else {
                        QuotationSymbolID =$("#txtOrderSymbolID").val();
                        GetSymbolQuotation();
                    }
                }
            });
            $('#txtOrderSymbolID').keyup(function (event) {
                if (event.keyCode == 13) {
                    if (CheckOrderSymbol(this)) {
                        if (IsPriceVolumeMode) { }
                        else {
                            QuotationSymbolID =$("#txtOrderSymbolID").val();
                            GetSymbolQuotation();
                        }
                    }
                }
            });
            $("#btnBuy").click(function () {
                $("#divOrderBox").attr("class", "OrderBoxBuy");
                this.src = '@Url.Content("~/Images/Buy_Pressed.png")';
                this.style.cursor = 'default';
                var btnSell = document.getElementById('btnSell');
                if (btnSell == undefined) { }
                else { 
                    btnSell.style.cursor = 'pointer';
                    btnSell.src = '@Url.Content("~/Images/Sell.png")'; 
                }
            });
            $("#btnSell").click(function () {
                $("#divOrderBox").attr("class", "OrderBoxSell");
                this.style.cursor = 'default';
                this.src = '@Url.Content("~/Images/Sell_Pressed.png")';
                var btnBuy = document.getElementById('btnBuy');
                if (btnBuy == undefined) { }
                else {
                    btnBuy.style.cursor = 'pointer';
                    btnBuy.src = '@Url.Content("~/Images/Buy.png")';
                }
            });
            $("#sltMarket").change(function () {
                $("#txtOrderSymbolID").val("");
                $("#txtOrderSymbolName").val("");
                $("#txtQty").val("");
                $("#txtPrice").val("");
                var accounts;
                if ($(this).val() == "S") {
                    $("#divQtyTitle").html("張數：");
                    $("#divStockOrderType").show();
                    $("#divFOOrderType").hide();
                    $("#divFUTP").hide();
                    $("#divFTDTP").hide();
                    $("#btnPriceFlag").attr("disabled", false);
                    $("#divPriceFlag>.PriceFlagItemSelected").click();
                   
                    $("#lblStockOrderTypeMargin1").show();
                    $("#lblStockOrderTypeMargin2").show();
                    accounts = StockAccounts;

                } 
                else if ($(this).val() == "E") {
                    $("#divQtyTitle").html("張數：");
                    $("#divStockOrderType").show();
                    $("#divFOOrderType").hide();
                    $("#divFUTP").hide();
                    $("#divFTDTP").hide();
                    $("#btnPriceFlag").attr("disabled", true);
                    $("#divLimitPriceFlagItem").click();
                    $("#rbDefaultStockOrderType").attr("checked", true);
                    $("#lblStockOrderTypeMargin1").hide();
                    $("#lblStockOrderTypeMargin2").hide();
                    accounts = StockAccounts;
                }
                else {
                    $("#divQtyTitle").html("口數：");
                    $("#divStockOrderType").hide();
                    $("#divFOOrderType").show();
                    $("#divFUTP").show();
                    $("#divFTDTP").show();
                    $("#rbFTDTPAuto").attr("checked", true);
                    if($(this).val() == "F"){
                        $("#lblFUTPDT").show();
                    }else{
                        $("#lblFUTPDT").hide();
                    }
                    $("#btnPriceFlag").attr("disabled", false);
                    $("#divPriceFlag>.PriceFlagItemSelected").click();
                    CheckFOkOrderTypeLimit();
                    accounts = FutureAccounts;
                }
                var sb = new StringBuilder();
                for (var ii = 0; ii < accounts.length; ii++) {
                    if (accounts[ii] == "-") { }
                    else { sb.append("<option value='" + accounts[ii] + "'>" + accounts[ii] + "</option>"); }
                }
                $("#sltAccount").html(sb.toString());
            });
            $("#sltMarket").change();
            $("#btnOrderBoxShowSymbol").click(function () {
                SelectedFunc = function ($node) {
                    SetSymbolToOrderSymbol($node);
                    HideSymbolBox();
                    if (IsPriceVolumeMode) { }
                    else {
                        QuotationSymbolID = $("#txtOrderSymbolID").val();
                        GetSymbolQuotation();
                    }
                };
                ShowSymbolBox(true);
            });
            $("[name='rbFOkOrderType']").click(function () {
                CheckFOkOrderTypeLimit();
            });
        }
        function SetSymbolToOrderSymbol($node) {
            var canOrder = true;
            var market = GetSymbolMarket($node);
            if (market == "") {
                alert("無市場別");
                canOrder = false;
            } else if (market == "I") {
                alert("此商品無法進行下單。");
                canOrder = false;
            }
            if (canOrder) {
                $("#txtOrderSymbolID").val($node.attr("code"));
                $("#txtOrderSymbolName").val($node.attr("name"));
                $("#rbDoOrder:not(:checked)").attr("checked", true).click();
                $("#hdOrderSymbolMarket").val(market);
            } else {
                $("#txtOrderSymbolID").val("");
                $("#txtOrderSymbolName").val("");
            }
        }
        function CheckFOkOrderTypeLimit() {
            if($("#divPriceFlag").is(":visible")){
                $("#divPriceFlag").hide("blind");
            }
            if ($("#rbFOkOrderTypeLimitPrice:checked").length == 1) {
                $("#txtPrice").attr("disabled", false);
                $("#btnPriceFlag").attr("disabled", false);
                $("#divPriceFlag > div:first").click();
            } else {
                $("#txtPrice").attr("disabled", true);
                $("#btnPriceFlag").attr("disabled", true);
                $("#lblPriceFlag").html("");
            }
        }
        function ShowSymbolBox(isOrder) {
            if(!IsLoadSymbolXML){
                return;
            }
            var marketType = $("#sltMarket").val();
            var needToBuildTreeMenu = false;
            if (isOrder) {
                if (marketType != "O") {
                    needToBuildTreeMenu = true;
                }
            } else {
                needToBuildTreeMenu = true;
            }
            if (needToBuildTreeMenu) {
                if (!IsBuildTreeMenu) {
                    IsBuildTreeMenu = true;
                    BuildTreeMenu($MenuXml, '@Url.Content("~/images/show.jpg")', '@Url.Content("~/images/hide.jpg")'); 
                }
            }
            if (isOrder) 
            {
                switch (marketType) 
                {
                    case "O":
                        $("#divSymbolTree").hide();
                        $("#divOptionSymbolTMenu").show();
                        break;
                    default:
                        ShowTreeMenuAllMarkets();
                        HideTreeMenuMarket("option");
                        HideTreeMenuMarket("index");
                        switch(marketType){
                            case "S":                       
                                HideTreeMenuMarket("emerging");
                                HideTreeMenuMarket("future");
                                break;
                            case "E":
                                HideTreeMenuMarket("stock");
                                HideTreeMenuMarket("future");
                                break;
                            case "F":
                                HideTreeMenuMarket("stock");
                                HideTreeMenuMarket("emerging");
                                break;
                        }
                        $("#divSymbolTree").show();
                        $("#divOptionSymbolTMenu").hide();
                        break;
                } 
            } 
            else 
            {
                ShowTreeMenuAllMarkets();
                if (!IsPriceVolumeMode) { 
                    HideTreeMenuMarket("future");
                    HideTreeMenuMarket("option");
                    HideTreeMenuMarket("index");
                    HideTreeMenuMarket("emerging");
                }
                else HideTreeMenuMarket("emerging");
                $("#divSymbolTree").show();
                $("#divOptionSymbolTMenu").hide();
            }
            $("#divCover").ShowScreenCover("clip");
            $("#divSymbolBox").draggable({ handle: $("#divSymbolBoxTitle") });
            $("#divSymbolBox").css("top", "50px");
            $("#divSymbolBox").css("z-Index", "1000");
            $("#divSymbolBox").show();
            if (marketType == "O") {
                $("#sltOptionGroupMenu").change();               
            }
            var left = $(window).width() / 2 - $("#divSymbolBox").width() / 2;
            $("#divSymbolBox").css("left", left);
            $("#txtSymbolBoxSearch").focus();
        }
        function HideSymbolBox() {
            $("#divSymbolBox").hide();
            $("#divCover").HideScreenCover("clip");
        }
        //是否需要簽章，只是檢查輸入時即先設為false，再設為true
        function SetInputObjOrder(inputObj, NeedToSign) {
            var orderContent = GetOrderContent();
            inputObj.ISOD = "1";
            inputObj.OMTP = orderContent.Market;
            inputObj.BHNO = orderContent.BrokerID;
            inputObj.ACNO = orderContent.Account;
            inputObj.OCOD = orderContent.SymbolID;
            inputObj.ONAM = orderContent.SymbolName;
            inputObj.BSTP = orderContent.BS;
            inputObj.ODVL = orderContent.Qty;
            if (inputObj.ODVL <= 0){
                alert($("#divQtyTitle").text() + "需大於零。");
                return false;
            }
            inputObj.ODTP = orderContent.OrderType;
            //下單市場別
            if (inputObj.OMTP == "") {
                alert("無下單市場別");
                return false;
            }
            if (inputObj.OMTP == "I") {
                alert("此商品無法進行下單[" + inputObj.OCOD + "]。");
                return false;
            }
            //下單商品代碼
            if (inputObj.OCOD == "") {
                alert("無下單商品ID");
                return false;
            }
            //下單商品名稱
            if (inputObj.ONAM == "") {
                alert("無下單商品名稱");
                return false;
            }
            var checkPrice = false;
            var isFO;
            if (orderContent.Market == "S" || orderContent.Market == "E") {
                inputObj.TDTP = "0";
                isFO = false;
            } else {
                inputObj.TDTP = $("[name='rbFTDTP']:checked").val();
                inputObj.FUTP = $("#divFUTP [name='rbFUTP']:checked").val();
                isFO = true;
            }
            inputObj.ODFG = orderContent.PriceFlag;
            if (isFO) 
            {
                if (inputObj.ODTP == "L" && inputObj.ODFG == "0") {
                    inputObj.ODPC = orderContent.Price;
                    checkPrice = true;
                } else {
                    inputObj.ODPC = "0";
                }
            }
            else
            {
                if (inputObj.ODFG == "0") {
                    inputObj.ODPC = orderContent.Price;
                    checkPrice = true;
                } else {
                    inputObj.ODPC = "0";
                }
            }
            if (checkPrice) {
                //下單價格
                if (inputObj.ODPC == "") {
                    alert("請輸入下單價格。");
                    return false;
                } else {
                    var price = parseFloat(inputObj.ODPC);
                    if (price <= 0 || isNaN(price)) {
                        alert("下單價格需大於0。");
                        return false;
                    }
                }
            }
            //下單張數
            if (inputObj.ODVL == "") {
                if (isFO) {
                    alert("請輸入下單張口數。");
                } else {
                    alert("請輸入下單張數。");
                }
                alert("請輸入下單張數。");
                return false;
            } else {
                var qty = parseFloat(inputObj.ODVL);
                if (qty == 0 || isNaN(qty) || !IsInt(qty)) {
                    
                    if (isFO) {
                        alert("請輸入正確下單口數。");
                    } else {
                        alert("請輸入正確下單張數。");
                    }
                    return false;
                }
            }
            var date = GetNowDate();
            var time = GetNowTime(true);
            time = time.split(":").join("");
            var sbData = new StringBuilder();
            switch (inputObj.OMTP) {
                case "S":   //證券
                    sbData.append("HTSC");                              //HTSC
                    sbData.append("_0");                                //盤別---0=普通,1=盤後,2=零股---雲端秘書只會有普通單
                    sbData.append("_" + inputObj.MTPE);                 //類別---S：證券
                    sbData.append("_" + inputObj.BHNO + inputObj.ACNO); //分公司+帳號(帳號---11碼)
                    sbData.append("_" + '@DateString');                 //交易日(驗章日)---yyyymmdd
                    sbData.append("_1");                                //委託單狀態---1:盤中
                    sbData.append("_N");                                //下單類別-----N新單=C改單=D刪單-----雲端秘書只會有新單
                    //委託種類----0=現股,1=自資,2=自券
                    orderType = $("#divStockOrderType [name='rbStockOrderType']:checked").val();
                    switch (orderType) {
                        case "0": break;  //現股
                        case "3": orderType = "1"; break;  //自資
                        case "4": orderType = "2"; break;  //自券
                    }
                    sbData.append("_" + orderType);                     //委託種類----0=現股,1=自資,2=自券
                    sbData.append("_" + inputObj.BSTP);                 //買賣----B買  S賣
                    sbData.append("_" + inputObj.OCOD);                 //股號----
                    sbData.append("_" + inputObj.ODVL);                 //張(股)數----
                    switch (inputObj.ODFG)                              //價格別---0：限價 1：漲停 2：跌停 3：平盤
                    {
                        case "0":   //玉山的限價=0
                            sbData.append("_0");
                            break;
                        case "9":   //玉山的漲停=1
                            sbData.append("_1");
                            break;
                        case "1":   //玉山的跌停=2
                            sbData.append("_2");
                            break;
                        case "5":   //玉山的平盤=3
                            sbData.append("_3");
                            break;
                    }
                    if (inputObj.ODPC == "") { sbData.append("_0000"); }
                    else
                    {
                        var price = parseFloat(inputObj.ODPC);
                        if (price == 0) { sbData.append("_0000"); }
                        else { 
                            price = price * 100;
                            sbData.append("_" + price.toString());      //價格----價格*100  (LIKE 1135)  沒有價格帶 0000
                        }
                    }
                    sbData.append("_" + "@ip");                         //CLIENT IP----
                    break;
                case "F":   //期貨
                case "O":   //選擇權
                    //期權 = HTSC_0_S_884F9800646_20150402_1_N_0_B_0050_20_0_2001_168.95.1.1_0139_20150402-175612_1001,1,2001,_20150304_0_A
                    /*
                        下單CHANEL---看上面代碼
                        類別---F期貨
                        帳號---10碼
                        交易日(驗章日)---yyyymmdd
                        委託單狀態---1:盤中 
                        下單類別---N新單
                        單式複式---FS:期貨單式,OS:選擇權單式 
                        買賣---B買  S賣
                        商品---
                        口數---
                        價格別---0限價 1市價
                        價格---XXXXXXXX 價格*100
                        委託條件---F(FOK),I(IOC),R(ROD)
                        倉別---O 新倉 C 平倉 T 當沖 A 自動
                        ClientIP---168.95.1.1
                        監控商品序號----
                        委託監控時間---yyyymmdd-hhmmss
                        監控類別---1：限時
                        2：價量
                        監控內容(條件設定)---CONDT_ID(條件ID),NUM_VAL1(數值1),NUM_VAL(數值2)|CONDT_ID(條件ID),NUM_VAL1(數值1),NUM_VAL(數值2)條件與條件之間以|連結
	                    監控時段設定---1:當日, 2:長效監控                                
                        監控結束日期---yyyymmdd
                        監控停止原則---0：超過委託時間停止
                        1：觸發一次即停止
                        2：一天最多觸發一次直到監控期結束
                        通知管道---
	                        N：不通知
	                        A：玉山A+網路下單
	                        M：玉山證券A+行動下單
	                        E：委託成交回報EMAIL設定
	                        綜合：AME
                    */
                    sbData.append("HTSC");
                    sbData.append("_" + inputObj.MTPE);                 //市場類別
                    sbData.append("_" + inputObj.BHNO + inputObj.ACNO); //分公司+帳號
                    sbData.append("_" + '@DateString');                 //交易日----20091124
                    sbData.append("_1");                                //暫時為盤中單,等後端好後要更新為後台帶回
                    sbData.append("_N");                                //下單類別-----N新單=C改單=D刪單-----雲端秘書只會有新單
                    sbData.append("_" + inputObj.MTPE + "S");           //單式複式----FS:期貨單式,FD:期貨複式,OS:選擇權單式,OD:選擇權複式-----雲端秘書只會有單式
                    sbData.append("_" + inputObj.BSTP);                 //買賣----B買  S賣
                    sbData.append("_" + inputObj.OCOD);                 //商品----
                    sbData.append("_" + inputObj.ODVL);                 //口數----
                    switch (inputObj.ODTP) {
                        case "M": //市價=1
                            sbData.append("_1");
                            break;
                        case "L": //限價=0
                            sbData.append("_0");
                            break;
                        case "P": //範圍市價=2
                            sbData.append("_2");
                            break;
                    }
                    switch (inputObj.ODFG)                              //價格別---0：限價 1：漲停 2：跌停 3：平盤
                    {
                        case "0":   //玉山的限價=0
                            sbData.append("_0");
                            var price = parseFloat(inputObj.ODPC);
                            if (price == 0) { sbData.append("_0000"); } 
                            else { 
                                price = price * 100;
                                sbData.append("_" + price.toString());      //價格----價格*100 (LIKE 1135) 沒有價格帶 0000
                            }
                            break;
                        case "9":   //玉山的漲停=1
                            sbData.append("_1_0000");
                            break;
                        case "1":   //玉山的跌停=2
                            sbData.append("_2_0000");
                            break;
                        case "5":   //玉山的平盤=3
                            sbData.append("_3_0000");
                            break;
                    }
                    sbData.append("_" + inputObj.FUTP);                 //委託條件----F(FOK),I(IOC),R(ROD)
                    //UI期權倉別：0=新倉, 1=平倉, 2=當沖, ""=空值為自動
                    switch (inputObj.TDTP)                              //玉山期權倉別----O 新倉 C 平倉 T 當沖 A 自動
                    {
                        case "0":   //0=新倉
                            sbData.append("_O");
                            break;
                        case "1":   //1=平倉
                            sbData.append("_C");
                            break;
                        case "2":   //2=當沖
                            sbData.append("_T");
                            break;
                        case "":    //""=空值為自動
                            sbData.append("_A");
                            break;
                    }
                    sbData.append("_" + "@ip");                         //CLIENT IP----
                    break;
            }
            //###############################################監控條件
            sbData.append("_" + GRPID);                         //監控商品序號---四碼 0139       (暫時帶[ 0000 ]等國興的抽號碼機制寫好再加上去)
            sbData.append("_" + SYSDATETIME);                   //委託監控時間---yyyymmdd-hhmmss (暫時帶[ yyyyMMdd-HHmmss ]等國興的抽號碼機制寫好再加上去)
            if (IsPriceVolumeMode) { sbData.append("_2"); }     //監控類別---1：限時 2：價量
            else  { sbData.append("_1"); }
            var CondList = [];
            var CondString = undefined;
            if (IsPriceVolumeMode) {
                //價量模式
                var $chks = $("#divPVConditions input[type='checkbox']:checked:not(:disabled)");
                $chks.each(function () {
                    var $obj = $(this);
                    var $rbAboveBelow = $("input[type='radio'][name='rb" + $obj.val() + "']:checked");
                    var conditionID = $obj.val();
                    var aboveBelow = $rbAboveBelow.val();
                    var sValue = $obj.parents("tr:first").find("input[name='txtConditionValue']").val();
                    CondList.push(conditionID + "," + aboveBelow + "," + sValue);
                });
            } else {
                //限時模式
                var conditionID = $("#hdLimitTimeOrderConditionID").val();
                var orderDate = $("#txtOrderDate").val().split("/").join(""); //yyyymmdd
                var orderTime = $.trim($("#HourList").val()) + $.trim($("#MinuteList").val()) + "00";
                CondList.push(conditionID  + "," + orderDate + "," + orderTime);
            }
            var CondString = CondList.join('|');
            sbData.append("_" + CondString);
            if (IsPriceVolumeMode) {
                var watchDateRange = $("[name='rbWatchDateRange']:checked").val();
                sbData.append("_" + watchDateRange);
                var endDate = '@DateString';
                if (watchDateRange == "2") { endDate = $("#txtEndDate").val().split("/").join(""); }
                sbData.append("_" + endDate);
            } else {
                var endOrderDate = $("#txtOrderDate").val().split("/").join("");
                sbData.append("_" + endOrderDate);
            }
            if (IsPriceVolumeMode) {
                var stopRule = $("[name='rbStopRule']:checked").val();
                sbData.append("_" + stopRule);
            } else { sbData.append("_0"); }            
            var AS_CA_AME = CA_AME;
            if (IsPriceVolumeMode) {
                var pvNotify = $("[name='rbPVNotify']:checked").val();
                if (pvNotify == "0") { AS_CA_AME = "N"; }
            } else {
                var ltNotify = $("[name='rbLTNotify']:checked").val();
                if (ltNotify == "0") { AS_CA_AME = "N"; }
            }            
            sbData.append("_" + AS_CA_AME);
            //若非交易性質請參照下方範例
            /* 下單CHANEL_88409801844_欲簽章DATA_127.0.0.1 */
            var data = sbData.toString(); //明文
            //alert("明文=" + data);
            if (NeedToSign) {
                var sign = CASignESUN(UserID, data);
                if (sign == undefined) {
                    return false;
                }
                inputObj.SIGN = sign;
            }
            return true;
        }
        function GetEmptyAddUserConditionInput() {
            var inputObj = {
                USID: "@userID",
                /// <summary>
                /// 市場別
                /// S=證券
                /// F=期貨
                /// O=選擇權
                /// E=興櫃
                /// </summary>
                MTPE: "",
                /// <summary>
                /// 條件商品代碼
                /// </summary>
                CCOD: "",
                /// <summary>
                /// 條件商品名稱
                /// </summary>
                CNAM: "",
                /// <summary>
                /// 監控起始日期YYYYMMDD
                /// </summary>
                DTFR: "",
                /// <summary>
                /// 監控結束日期YYYYMMDD
                /// </summary>
                DTED: "",
                /// <summary>
                /// 監控原則
                /// 1=觸發後即截止（下單一次）：當條件觸發後，不管所送出的委託單是否成交，此條件單立即失效。
                /// 2=每日條件到達就下單（每日下單）。
                /// </summary>
                STPR: "",
                /// <summary>
                /// 是否通知 0=否 1=是
                /// </summary>
                NOTP: "",
                /// <summary>
                /// 是否下單
                /// </summary>
                ISOD: "",
                /// <summary>
                /// 下單市場別
                /// </summary>
                OMTP: "",
                /// <summary>
                /// 分公司
                /// </summary>
                BHNO: "",
                /// <summary>
                /// 帳號
                /// </summary>
                ACNO: "",
                /// <summary>
                /// 下單商品代碼
                /// </summary>
                OCOD: "",
                /// <summary>
                /// 下單商品名稱
                /// </summary>
                ONAM: "",
                /// <summary>
                /// 買賣別
                /// B=買
                /// S=賣
                /// </summary>
                BSTP: "",
                /// <summary>
                /// 下單價格旗標
                /// 0=限價
                /// 1=跌停
                /// 2=跌停加一檔
                /// 3=二分之一跌停
                /// 5=平盤
                /// 6=現價
                /// 7=二分之一漲停
                /// 8=漲停減一檔
                /// 9=漲停
                /// </summary>
                ODFG: "",
                /// <summary>
                /// 下單價格 當Price_Flag=0時才有意義，Price_Flag不為0時，Price填入0
                /// </summary>
                ODPC: "",
                /// <summary>
                /// 下單數量
                /// </summary>
                ODVL: "",
                /// <summary>
                /// 交易類別
                /// 證券：0=普通, 1=鉅額, P=定價, 2=零股
                /// 期權：0=新倉, 1=平倉, 2=當沖, 空白為自動
                /// </summary>
                TDTP: "",
                /// <summary>
                /// 期權下單類別
                /// R= ROD
                /// F= FOK
                /// I= IOC
                /// </summary>
                FUTP: "",
                /// <summary>
                /// 委託種類
                /// 證券：0=現股, 1=代資, 2=代券, 3=自資, 4=自券
                /// 期權：M=市價, L=限價
                /// </summary>
                ODTP: "",
                /// <summary>
                /// ID=條件ID,FG=比較旗標(1=大於, 2=小於),V1,V2
                /// 多組時使用;分隔
                /// </summary>
                COND: "",
                /// <summary>
                /// 下單簽章內文
                /// </summary>
                SIGN: ""
            };
            return inputObj;
        }
        //-------------ajax-----------------------
        function GetUserSymbol(url, $slt, $div) {
            $.ajax({
                type: "POST",
                url: url,
                success: function (jData) {
                    try 
                    {
                        var jsonResult = $.parseJSON(jData);
                        if (jsonResult == undefined) { }
                        else {
                            if (jsonResult.Success) {
                                var items = $.parseJSON(jsonResult.Content);
                                var key ="SumGroup";
                                $slt.change(function() {
                                    var sumGroup =  $(this).find(":selected").data(key);
                                    if (sumGroup == undefined) { }
                                    else { BuildUserSymbolList($div, sumGroup.Symbols); }
                                });
                                for (var ii = 0; ii < items.length; ii++) {
                                    var $Obj = $("<option>" + items[ii].Name + "</option>");
                                    $slt.append($Obj);  
                                    $Obj.data(key, items[ii]); 
                                }
                                LoadInitUserSymbolList();
                            } else { 
                                alert('005-' + jsonResult.Msg);
                                window.location.href = '@Url.Content("~/Login/DoLogout")';
                            }
                        }
                    } catch (e) {
                        HandleError(e);
                    }
                },
                error: function (obj) {
                    HandleAjaxError(obj);
                }
            });
        }
        function GetSymbolQuotation() {
            if (QuotationSymbolID == undefined || QuotationSymbolID == ""){
                alert("請輸入有效的商品代碼。");
                return;
            }
            function GetQuotationValue(value){
                if(value!= undefined){
                    var result = value.substr(1);
                    return result;
                }
                return "";
            }
            function GetQuotationClass(value){ 
                if (value!= undefined) {
                    var flag = value.substr(0, 1); 
                    switch(flag){
                        case "1":  return "QuotationUpLimit";
                        case "2":  return "QuotationUp";
                        case "4": return "QuotationDownLimit";
                        case "5": return "QuotationDown"; 
                    }
                }
                return "QuotationNone";   
            }
            function GetAmountUnit(market){
                switch(market){
                    case "S":
                    case "E":
                        return "萬";
                    case "I":
                        return "億";

                }
                return "";
            }
            LoginActiveB(true, "更新報價中、請稍候...");
            $("#lblGetSymbolQuotationDateTime").html("更新報價中、請稍候..."); 
            $.ajax({
                type: "POST",
                url: '@Url.Content("~/Data/GetSymbolQuotation")',
                data:"SymbolID=" + QuotationSymbolID,
                success: function (jData) {
                    try {
                        var jsonResult = $.parseJSON(jData);
                        if (jsonResult != undefined) {
                            $("#lblGetSymbolQuotationDateTime").html(jsonResult.DateTime);                            
                            if (jsonResult.Success) {
                                var items = $.parseJSON(jsonResult.Content); 
                                var sb = new StringBuilder();
                                sb.append("<table border=\"1\" align=\"center\" cellpadding=\"0\" cellspacing=\"1\" class=\"tbList\"  bgcolor=\"#F0F0F0\" bordercolor=\"black\">");
                                sb.append("<tr class=\"txt_ff\">");
                                sb.append("<td width=\"78px\" class=\"QuotationTitle\">代碼</td>");
                                sb.append("<td width=\"98px\" class=\"QuotationTitle\">名稱</td>");
                                sb.append("<td width=\"70px\" class=\"QuotationTitle\">買價</td>");
                                sb.append("<td width=\"70px\" class=\"QuotationTitle\">賣價</td>");                               
                                sb.append("<td width=\"70px\" class=\"QuotationTitle\">成交價</td>");
                                sb.append("<td width=\"83px\" class=\"QuotationTitle\">漲跌</td>");
                                sb.append("<td width=\"65px\" class=\"QuotationTitle\">漲跌幅</td>");
                                sb.append("<td width=\"70px\" class=\"QuotationTitle\">開盤價</td>");
                                sb.append("<td width=\"70px\" class=\"QuotationTitle\">最高價</td>");
                                sb.append("<td width=\"70px\" class=\"QuotationTitle\">最低價</td>");
                                sb.append("<td width=\"66px\" class=\"QuotationTitle\">單量</td>");
                                sb.append("<td width=\"68px\" class=\"QuotationTitle\">總量</td>");
                                sb.append("<td width=\"119px\" class=\"QuotationTitle\">成交金額</td>");
                                sb.append("</tr>");
                                var price, flag, index, className;
                                for(var ii = 0; ii < items.length; ii++){
                                    var changePercentage = items[ii].ChangePercentage;
                                    var change = GetQuotationValue(items[ii].Change);
                                    var css = GetQuotationClass(items[ii].CurrentPrice);
                                    switch (css) {
                                        case "QuotationUpLimit":
                                        case "QuotationUp":
                                            changePercentage = "▲" + $.trim(changePercentage); //.substr(1);
                                            change = "▲" + $.trim(change);
                                            break;
                                        case "QuotationDownLimit":
                                        case "QuotationDown":
                                            changePercentage = "▼" + $.trim(changePercentage); //.substr(1);
                                            change = "▼" + $.trim(change);
                                            break;
                                        case "QuotationNone": break;
                                    }
                                    sb.append("<tr>");
                                    sb.append("<td bgcolor=\"#FFFFFF\" class=\"QuotationNone\" style=\" text-align: center;\">" + items[ii].SymbolID + "</td>");
                                    sb.append("<td bgcolor=\"#FFFFFF\" class=\"QuotationNone\" style=\" text-align: center;\">" + items[ii].SymbolName + "</td>");
                                    sb.append("<td bgcolor=\"#FFFFFF\" class=\"" + GetQuotationClass(items[ii].BuyPrice) + "\" style=\"text-align: right;\">" + GetQuotationValue(items[ii].BuyPrice) + "</td>"); 
                                    sb.append("<td bgcolor=\"#FFFFFF\" class=\"" + GetQuotationClass(items[ii].SellPrice) + "\" style=\"text-align: right;\">" + GetQuotationValue( items[ii].SellPrice) + "</td>");
                                    var cpClass = GetQuotationClass(items[ii].CurrentPrice);
                                    sb.append("<td bgcolor=\"#FFFFFF\" class=\"" + cpClass+ "\" style=\"text-align: right;\">" + GetQuotationValue(items[ii].CurrentPrice) + "</td>");
                                    sb.append("<td bgcolor=\"#FFFFFF\" class=\"" + cpClass + "\" style=\"text-align: right;\">" + change + "</td>");
                                    sb.append("<td bgcolor=\"#FFFFFF\" class=\"" + cpClass + "\" style=\"text-align: right;\">" + changePercentage + "</td>");
                                    sb.append("<td bgcolor=\"#FFFFFF\" class=\"" + GetQuotationClass(items[ii].OpenPrice) +"\" style=\"text-align: right;\">" + GetQuotationValue( items[ii].OpenPrice) + "</td>");
                                    sb.append("<td bgcolor=\"#FFFFFF\" class=\"" + GetQuotationClass(items[ii].HighPrice) +"\" style=\"text-align: right;\">" + GetQuotationValue( items[ii].HighPrice) + "</td>");
                                    sb.append("<td bgcolor=\"#FFFFFF\" class=\"" + GetQuotationClass(items[ii].LowPrice) +"\" style=\"text-align: right;\">" + GetQuotationValue( items[ii].LowPrice) + "</td>");
                                    sb.append("<td bgcolor=\"#FFFFFF\" class=\"QuotationNone\" style=\"text-align: right;\">" + items[ii].CurrentVolume + "</td>");
                                    sb.append("<td bgcolor=\"#FFFFFF\" class=\"QuotationNone\" style=\"text-align: right;\">" + items[ii].TotalVolume + "</td>");
                                    var unit = "";
                                    var $node = $MenuXml.find("item[code='" + items[ii].SymbolID + "']");
                                    if($node != undefined){
                                        var market =  GetSymbolMarket($node)
                                        unit = GetAmountUnit(market);
                                    }
                                    sb.append("<td bgcolor=\"#FFFFFF\" class=\"QuotationNone\" style=\"text-align: right;\">" + items[ii].TotalAmount + unit + "</td>");
                                    sb.append("</tr>");                     
                                }
                                sb.append("</table>");
                                $("#divSymbolQuotation").html(sb.toString());
                                LoginActiveB(false, "更新報價中、請稍候...");
                            } else {
                                alert('006-' + jsonResult.Msg);
                                LoginActiveB(false, "更新報價中、請稍候...");
                                window.location.href = '@Url.Content("~/Login/DoLogout")';
                            }
                        }
                    } catch (e) {
                        HandleError(e);
                        LoginActiveB(false, "更新報價中、請稍候...");
                    }
                },
                error: function (obj) {
                    HandleAjaxError(obj);
                    LoginActiveB(false, "更新報價中、請稍候...");
                }
            });
        }
        function GetAddUserConditionGroupInputObj(NeedToSign)
        {
            var inputObj = GetEmptyAddUserConditionInput();
            //步驟一
            var symbolID = '';
            var symbolName = '';
            var market = '';
            if (IsPriceVolumeMode) {
                symbolID = $("#txtConditionSymbolID").val().toUpperCase();
                symbolName = $("#txtConditionSymbolName").val();
                market = $("#hdConditionSymbolMarket").val();            
                if (symbolID == "") {
                    alert("請選擇商品。");
                    $("#txtConditionSymbolID").focus();
                    return undefined;
                }
                if (market == "") {
                    alert("商品無市場別，請重新選擇商品。");
                    $("#hdConditionSymbolMarket").focus();
                    return undefined;
                }
            } else {
                market = $("#hdOrderSymbolMarket").val();
                symbolID = $("#txtOrderSymbolID").val().toUpperCase();
                symbolName = $("#txtOrderSymbolName").val();
            }
            var account = $("#sltAccount").val();
            var order = $("[name='rbOrder']:checked").val();
            if (order == "1") {
                if ((account == undefined) | (account == null) | (account == '')) {
                    alert("帳號尚未輸入、請重新輸入。");
                    $("#sltAccount").focus();
                    return undefined;
                }
            }
            //條件的市場別 興櫃也設S
            if (market == "E") { market = "S"; }
            inputObj.MTPE = market;
            inputObj.CCOD = symbolID;
            inputObj.CNAM = symbolName;
            /* 判斷整數僅能輸入6位 */
            var price = $("#txtPrice").val();
            var pstr = price.toString();
            var pindex = pstr.indexOf(".");                    
            var IntValue = pstr.substring(0, pindex);
            if (IntValue == '') { IntValue = price; }
            if (IntValue.length > 5) {
                alert("下單價格最多只能輸入5位整數。");
                $("#txtPrice").focus();
                canDo = false;
                return undefined;
            }
            /* 判斷小數僅能輸入3位 */
            if (pindex > -1) {
                var pfloatValue = pstr.substr(pindex+1);
                if (pfloatValue.length > 3) {
                    alert("下單價格最多只能輸入3位小數。");
                    $("#txtPrice").focus();
                    canDo = false;
                    return undefined;
                }
            }
            if (IsPriceVolumeMode) {
                //價量模式
                //步驟二
                var $chks = $("#divPVConditions input[type='checkbox']:checked:not(:disabled)");
                if ($chks.length == 0) {
                    alert("請勾選條件。");
                    return undefined;
                }
                var sbCondition = new StringBuilder();
                var canDo = true;
                $chks.each(function () {
                    var $obj = $(this);
                    var $rbAboveBelow = $("input[type='radio'][name='rb" + $obj.val() + "']:checked");
                    var conditionID = $obj.val();
                    var aboveBelow = $rbAboveBelow.val();
                    var sValue = $obj.parents("tr:first").find("input[name='txtConditionValue']").val();
                    var conditionName = $obj.parent().text();
                    var State = IsNumber(sValue);
                    //alert('sValue = ' + sValue + ', State = ' + State);
                    if (IsNumber(sValue)) { }
                    else {
                        alert(conditionName + "需輸入有效數值。");
                        canDo = false;
                        return undefined;
                    }
                    var value1 = parseFloat(sValue);
                    //檢查小數
                    if (isNaN(value1)) {
                        alert(conditionName +"需輸入有效數值。");
                        canDo = false;
                        return undefined;
                    } else if (value1 < 0) {
                        //漲跌, 漲跌幅
                        if (conditionID == "1002" | conditionID == "1007") 
                        { 
                            var str = value1.toString();
                            var index = str.indexOf(".");
                            if (index > -1) {
                                var floatValue = str.substr(index+1);
                                if(floatValue.length > 2){
                                    alert(conditionName +"只能輸入2位小數。");
                                    canDo = false;
                                    return undefined;
                                }
                            }
                        } else {
                            alert(conditionName +"需輸入正值。");
                            canDo = false;
                            return undefined;
                        }
                    } else if (conditionID == "1005" || conditionID == "1006") {//單量或總量
                        var intValue = parseInt(sValue);
                        if(intValue != value1){
                            if(conditionID == "1005"){
                                alert("單量需為整數。");
                            }else{
                                alert("總量需為整數。");
                            }
                            canDo = false;
                            return undefined;
                        }
                    } else {
                        var str = value1.toString();
                        var index = str.indexOf(".");
                        if (index > -1) {
                            var floatValue = str.substr(index+1);
                            if(floatValue.length > 2){
                                alert(conditionName +"只能輸入2位小數。");
                                canDo = false;
                                return undefined;
                            }
                        }
                    }
                    sbCondition.append(conditionID + "," + aboveBelow + "," + value1 + ",;");
                });
                if (!canDo) {
                    return undefined;
                }
                var COND = sbCondition.toString();
                inputObj.COND = COND;
                //步驟三
                var watchDateRange = $("[name='rbWatchDateRange']:checked").val();
                var endDate = "";
                if (watchDateRange == "2") {
                    endDate = $("#txtEndDate").val().split("/").join("");
                }
                inputObj.DTED = endDate;                
                //步驟四
                var stopRule = $("[name='rbStopRule']:checked").val();
                inputObj.STPR = stopRule;
                //步驟五
                var order = $("[name='rbOrder']:checked").val();
                if (order == "1") {
                    if (!SetInputObjOrder(inputObj, NeedToSign)) {
                        return undefined;
                    }
                    if (watchDateRange == "2") {
                        if(inputObj.OMTP == "F" || inputObj.OMTP == "O"){
                            alert("長效單不得下期權商品");
                            return undefined;
                        }
                    }

                } else {
                    inputObj.ISOD = "0";
                }
                var bs = undefined;
                var bors = $("#divOrderBox").attr("class");
                switch (bors)
                {
                    case "OrderBoxBuy": bs = "B"; break;
                    case "OrderBoxSell": bs = "S"; break;
                }
                if (bs == undefined)
                {
                    if (inputObj.ISOD == "1")
                    {
                        alert("請選擇[ 買進 ]或[ 賣出 ]!");
                        return undefined;
                    }
                }
                //步驟六
                var pvNotify = $("[name='rbPVNotify']:checked").val();
                inputObj.NOTP = pvNotify;
            } else {
                //限時模式
                //步驟二
                if (!SetInputObjOrder(inputObj, NeedToSign)) {
                    return undefined;
                }
                //步驟三
                var orderDate = $("#txtOrderDate").val().split("/").join(""); //yyyymmdd
                var orderTime = $.trim($("#HourList").val()) + $.trim($("#MinuteList").val()) + "00";
                inputObj.DTED = orderDate;                
                if(orderTime.length < 6){
                    orderTime = "0" + orderTime;
                }
                inputObj.STPR = "2";
                inputObj.COND = $("#hdLimitTimeOrderConditionID").val() + "," + "0" + "," + orderDate + "," + orderTime + ";";
                //步驟四
                var ltNotify = $("[name='rbLTNotify']:checked").val();
                inputObj.NOTP = ltNotify; 
                var bs = undefined;
                var bors = $("#divOrderBox").attr("class");
                switch (bors)
                {
                    case "OrderBoxBuy": bs = "B"; break;
                    case "OrderBoxSell": bs = "S"; break;
                }
                if (bs == undefined)
                {
                    if (inputObj.ISOD == "1")
                    {
                        alert("請選擇[ 買進 ]或[ 賣出 ]!");
                        return undefined;
                    }
                }
            }
            return inputObj;
        }
        function AddUserConditionGroup(inputObj) {
            if (inputObj == undefined) {
                alert("inputObj is undefined。");
                return;
            }
            var data = JSON.stringify(inputObj);
            var isPriceVolumeMode;
            if (IsPriceVolumeMode) { isPriceVolumeMode = "1"; }
            else { isPriceVolumeMode = "0"; }
            $.ajax({
                type: "POST",
                url: '@Url.Content("~/Data/AddUserConditionGroup?isPriceVolumeMode=")' + isPriceVolumeMode,
                data: "data=" + data,
                success: function (jData) {
                    try {
                        var jsonResult = $.parseJSON(jData);
                        if (jsonResult == undefined) {}
                        else {
                            if (jsonResult.Success) {
                                if (jsonResult.Msg == '') { }
                                else { alert(jsonResult.Msg); } 
                                GetUserConditionGroups();
                            } else { 
                                alert('007-' + jsonResult.Msg); 
                            }
                        }
                    } catch (e) {
                        HandleError(e);
                    }
                    AddButtonDisabled(false);
                },
                error: function (obj) {
                    AddButtonDisabled(false);
                    HandleAjaxError(obj);
                }
            });
            return true;
        }
        function DelUserConditionGroup() {
            var $trItem = $("#divUserRegisterSymbols tr.UserRegisterSymbolItemSelected");
            if ($trItem.length == 0) {
                alert("請選擇已註冊商品。");
                return;
            }
            var userConditionGroupID = $trItem.attr("UserConditionGroupID");
            var inputObj = { USID: "@userID", CGID: userConditionGroupID };
            var data = JSON.stringify(inputObj);
            $.ajax({
                type: "POST",
                data: "data=" + data,
                url: '@Url.Content("~/Data/DelUserConditionGroup")',
                success: function (jData) {
                    try {
                        var jsonResult = $.parseJSON(jData);
                        if (jsonResult != undefined) {
                            if (jsonResult.Success) {
                                alert("刪除成功。");
                                GetUserConditionGroups();
                            } else {
                                alert('008-' + jsonResult.Msg);
                                window.location.href = '@Url.Content("~/Login/DoLogout")';
                            }
                        }
                    } catch (e) {
                        HandleError(e);
                    }
                },
                error: function (obj) {

                    HandleAjaxError(obj);
                }
            });
        }
        function DelAllUserConditionGroups() {
            var inputObj = { USID: "@userID", CGID: "" };
            var data = JSON.stringify(inputObj);
            $.ajax({
                type: "POST",
                data: "data=" + data,
                url: '@Url.Content("~/Data/DelUserConditionGroup")',
                success: function (jData) {
                    try {
                        var jsonResult = $.parseJSON(jData);
                        if (jsonResult != undefined) {
                            if (jsonResult.Success) {
                                alert("刪除成功。");
                                GetUserConditionGroups();
                            } else {                                
                                alert('009-' + jsonResult.Msg);
                                window.location.href = '@Url.Content("~/Login/DoLogout")';
                            }
                        }
                    } catch (e) {
                        HandleError(e);
                    }
                },
                error: function (obj) {

                    HandleAjaxError(obj);
                }
            });
        }
        function UpdateUserConditionGroups() {
            //先寫一半,剩下的二階進行時再寫
            var $TD = $("#divUserRegisterSymbols tr.UserRegisterSymbolItemSelected td");
            if ($TD.length == 0) {
                alert("請選擇已註冊商品。");
                return;
            }
            var ic = $TD.eq(0).children("input");
            var ItemContent = ic.attr('value');
            ItemContent = ItemContent.replace(/'/g, "\"");
            var item = $.parseJSON(jsonResult.Content); //<---已經將USER選的ITEM解析成結構體,接下來再套到UI即可
        }
        function DoCheckPassword() {
            var data = document.getElementById("txtPassword").value; // $("#txtPassword").val();
            if (data == '')
            { 
                alert('請輸入登入密碼!'); 
                $("#txtPassword").focus();
            }
            else
            {
                $("#btnCheckPassword").attr("disabled", true);
                $("#txtPassword").attr("disabled", true);
                $("#divCheckPassword").hide();
                $("#divCover").HideScreenCover("clip");
                var inputObj = GetAddUserConditionGroupInputObj(false);
                if (inputObj == undefined) { }
                else 
                {
                    $.ajax({
                        type: "POST",
                        data: "data=" + data,
                        url: '@Url.Content("~/Data/CheckPassword")',
                        success: function (jData) {
                            try 
                            {
                                var jsonResult = $.parseJSON(jData);
                                if (jsonResult == undefined) { }
                                else 
                                {
                                    if (jsonResult.Success) {
                                        var item = $.parseJSON(jsonResult.Content);
                                        if (item.IsValid == "1") { //密碼驗證正確
                                            $("#divCheckPassword").hide();
                                            $("#divCover").HideScreenCover("clip");
                                            var inputObj = GetAddUserConditionGroupInputObj(true);
                                            if (inputObj == undefined) { 
                                                AddButtonDisabled(false);
                                            } else { AddUserConditionGroup(inputObj); }
                                        } else { alert("密碼錯誤。"); }
                                    } else {
                                        alert('010-' + jsonResult.Msg);
                                        window.location.href = '@Url.Content("~/Login/DoLogout")';
                                    }
                                }
                      
                            } catch (e) {
                                HandleError(e);
                            }
                            AddButtonDisabled(false);
                            $("#divCheckPassword").hide();
                            $("#divCover").HideScreenCover("clip");
                        },
                        error: function (obj) {
                            HandleAjaxError(obj);
                            AddButtonDisabled(false);
                            $("#divCheckPassword").hide();
                            $("#divCover").HideScreenCover("clip");
                        }
                    });
                }
            }
        }
        function CheckPassword(){
            var inputObj = GetAddUserConditionGroupInputObj(true);
            if (inputObj == undefined) { }
            else { AddUserConditionGroup(inputObj); }
            return;  //五捷說不驗密碼
            $("#txtPassword").val("");
            $("#divCover").ShowScreenCover("clip");
            $("#divCheckPassword").css("top", "50px");
            $("#divCheckPassword").css("position", "absolute");
            $("#divCheckPassword").css("z-Index", "1000");
            $("#btnCheckPassword").attr("disabled", false);
            $("#txtPassword").attr("disabled", false);
            var left = $(window).width() / 2 - $("#divCheckPassword").width() / 2;
            $("#divCheckPassword").css("left", left);
            $("#divCheckPassword").show();
            $("#txtPassword").focus();
        }
        //載入通知方式...
        var UserNotifyCount = 0;
        function GetUserNotify() {
            $.ajax({
                type: "POST",
                url: '@Url.Content("~/Data/GetUserNotify")',
                success: function (jData) {
                    try {
                        var jsonResult = $.parseJSON(jData);
                        if (jsonResult == undefined) { }
                        else {
                            if (jsonResult.Success) {
                                var items = $.parseJSON(jsonResult.Content);                                
                                for (var ii = 0; ii < items.length; ii++) {
                                    if (items[ii].IsValid == "1") {
                                        UserNotifyCount++;
                                    }
                                    var checked = undefined;
                                    if (items[ii].IsValid == "1") {
                                        checked = "checked='checked'";
                                    }
                                    if (checked == undefined) { }
                                    else {
                                        switch (items[ii].NotifyID) {
                                            case "1": //玉山A+網路下單(A)
                                                CA_AME += "A"; 
                                                break;
                                            case "2": //玉山A+行動下單贏家版(M)
                                                CA_AME += "M";
                                                break;
                                            case "3": //玉山E-Mail通知(E)
                                                CA_AME += "E";
                                                break;
                                        }
                                    }
                                } 
                                if (CA_AME == '') { CA_AME = "N"; }
                                Init();
                            } else {
                                alert('011-' + jsonResult.Msg);
                                window.location.href = '@Url.Content("~/Login/DoLogout")';
                            }
                        }
                    } catch (e) {
                        HandleError(e);
                    }
                },
                error: function (obj) {
                    HandleAjaxError(obj);
                }
            });
        }
        //載入條件
        function GetMonitor() {
            $.ajax({
                type: "POST",
                url: '@Url.Content("~/Data/GetMonitor?type=1")',
                success: function (jData) {
                    try {
                        var sb = new StringBuilder();
                        sb.append("<table width=\"217\" border=\"0\" cellpadding=\"1\" cellspacing=\"1\" class=\"tbList\">");
                        sb.append("<tr class=\"txt_ff\">");
                        sb.append("<td width=\"80\" bgcolor=\"#009893\">&nbsp;</td>");
                        sb.append("<td width=\"55\" align=\"center\" bgcolor=\"#009893\">條件設定</td>");
                        sb.append("<td width=\"35\" align=\"center\" bgcolor=\"#009893\">以上<br/>≧</td>");
                        sb.append("<td width=\"32\" align=\"center\" bgcolor=\"#009893\">以下<br/>≦</td>");
                        sb.append("</tr>");
                        var jsonResult = $.parseJSON(jData);
                        if (jsonResult == undefined) { }
                        else {
                            if (jsonResult.Success) {
                                var items = $.parseJSON(jsonResult.Content);
                                var sbCondition = new StringBuilder();
                                var sbCompare = new StringBuilder();
                                for (var ii = 0; ii < items.length; ii++) {
                                    var id = "chkCondition" + items[ii].ConditionID;
                                    sb.append("<tr name=\"trCondition\">");
                                    sb.append("<td bgcolor=\"#FFFFFF\"><input id=\"" + id + "\" name=\"chkCondition\" type=\"checkbox\" value=\"" + items[ii].ConditionID + "\" />");
                                    sb.append("<label style=\"margin-left:3px\" for=\"" + id + "\">" + items[ii].ConditionName )
                                    //alert('items[ii].ConditionID = ' + items[ii].ConditionID + ', items[ii].ConditionName = ' + items[ii].ConditionName);
                                    if (items[ii].ConditionID == "1007"){
                                        sb.append("%");
                                    }
                                    var title = "";
                                    if ((items[ii].ConditionID == "1002") | (items[ii].ConditionID == "1007"))
                                    { title = "欲設定價跌，請於數字前加負號、小數點取兩位(例：-1.05)" }
                                    sb.append( "</label></td>");
                                    sb.append("<td bgcolor=\"#FFFFFF\" style=\"width:80px\">");
                                    if (items[ii].ConditionID == "1008") {
                                        sb.append("<input type=\"text\"  class=\"bord_F\"  size=\"7\" id=\"txtConditionValue\" name=\"txtConditionValue\" maxlength=\"8\" style=\"width:56px; text-align:center\" title=\"" + title + "\" />");
                                        sb.append("億</td>");
                                    } else {
                                        sb.append("<input type=\"text\"  class=\"bord_F\"  size=\"7\" id=\"txtConditionValue\" name=\"txtConditionValue\" maxlength=\"8\" style=\"text-align:center\" title=\"" + title + "\" />");
                                        sb.append("</td>");
                                    }
                                    sb.append("<td align=\"center\" bgcolor=\"#FFFFFF\"><input type=\"radio\" name=\"rb" + items[ii].ConditionID + "\" checked=\"checked\" value=\"1\" /></td>");
                                    sb.append("<td align=\"center\" bgcolor=\"#FFFFFF\"><input type=\"radio\" name=\"rb" + items[ii].ConditionID + "\" value=\"2\" /></td>");
                                    sb.append("</tr>");
                                }
                                $("#divPVConditions").html(sb.toString());
                                Init();
                            } else {
                                alert('012-' + jsonResult.Msg);
                                window.location.href = '@Url.Content("~/Login/DoLogout")';
                            }
                        }
                    } catch (e) {
                        HandleError(e);
                    }
                },
                error: function (obj) {
                    HandleAjaxError(obj);
                }
            });
        }
        //載入已註冊商品
        function GetUserConditionGroups() {
            $.ajax({
                type: "POST",
                url: '@Url.Content("~/Data/GetUserConditionGroups")',
                success: function (jData) {
                    try {
                        var jsonResult = $.parseJSON(jData);
                        if (jsonResult == undefined) { }
                        else {
                            if (jsonResult.Success) {
                                var items = $.parseJSON(jsonResult.Content);
                                var sb = new StringBuilder();
                                sb.append("<table width=\"98%\" border=\"0\" align=\"center\" cellpadding=\"0\" cellspacing=\"1\" class=\"tbList\">");
                                sb.append("<tr class=\"txt_ff\">");
                                sb.append("<td height=\"25\" align=\"center\" bgcolor=\"#009893\">已設定商品</td>");
                                sb.append("<td align=\"center\" bgcolor=\"#009893\">狀態</td>");
                                sb.append("</tr>");
                                for (var ii = 0; ii < items.length; ii++) {
                                    var item = items[ii];
                                    var ItemString = JSON.stringify(item);
                                    ItemString = ItemString.replace(/\"/g, "'");
                                    sb.append("<tr name=\"trUserRegisterSymbolItem\" class=\"UserRegisterSymbolItem\" UserConditionGroupID=\"" + item.UserConditionGroupID + "\">");
                                    sb.append("<td title=ID:" + item.UserConditionGroupID + " id=\"" + item.UserConditionGroupID + "\">");
                                    sb.append("<input type=\"hidden\" id=\"ItemContent\" value=\"" + ItemString + "\"></input>");
                                    sb.append(item.SymbolName);
                                    sb.append("</td>");
                                    sb.append("<td title=ID:" + item.UserConditionGroupID + ">");
                                    sb.append(GetStatusCodeTitle(item.StatusCode, true));
                                    sb.append("</td>");
                                    sb.append("</tr>");
                                }
                                sb.append("</table>");
                                var $div = $("#divUserRegisterSymbols");
                                $div.html(sb.toString());
                                $div.find("tr.UserRegisterSymbolItem").click(function () {
                                    $div.find(".UserRegisterSymbolItemSelected").attr("class", "UserRegisterSymbolItem");
                                    $(this).attr("class", "UserRegisterSymbolItemSelected");
                                });
                                Init();
                            } else {
                                alert('013-' + jsonResult.Msg);
                                window.location.href = '@Url.Content("~/Login/DoLogout")';
                            }
                        }
                    } catch (e) {
                        HandleError(e);
                    }
                },
                error: function (obj) {
                    HandleAjaxError(obj);
                }
            });
        }
        //載入商品盒
        var IsBuildTreeMenu = false;
        var IsLoadSymbolXML = false;
        function BuildSymbolMenu() {
            $("#btnSymbolBoxClose").click(
                function () {
                    HideSymbolBox();
                }
            );
            $.ajax({
                type: "GET",
                url: '@Url.Content("~/code.xml")' + "?xx=" + (new Date()),
                success: function (xmlObj) {
                    try {
                        $MenuXml = $(xmlObj);     
                        BuildOptionGroupMenu($MenuXml);
                        IsLoadSymbolXML = true;
                        Init();                 
                    } catch (e) {
                        HandleError(e);                        
                    }
                    
                },
                error: function (obj) {
                    HandleAjaxError(obj);
                }
            });
        }
        //載入下單帳號
        function GetAccountInfo() {
            $.ajax({
                type: "POST",
                url: '@Url.Content("~/Data/GetAccountInfo")',
                success: function (jData) {
                    try {
                        var jsonResult = $.parseJSON(jData);
                        if (jsonResult == undefined) { }
                        else {
                            if (jsonResult.Success) {
                                var sb = new StringBuilder();
                                var item = $.parseJSON(jsonResult.Content);
                                StockAccounts = item.StockAccounts;
                                FutureAccounts = item.FutureAccounts;
                                if ($.isArray(StockAccounts)) {
                                    if (StockAccounts.length > 0) {
                                        GetStockSum(StockAccounts.join(","));
                                        sb.append("<option value=\"S\">證券</option>");
                                    } 
                                } else { StockAccounts = []; }
                                if (IsPriceVolumeMode && $.isArray(FutureAccounts)) {
                                    if (FutureAccounts.length > 0) {
                                        GetFOSum(FutureAccounts.join(","));
                                        sb.append("<option value=\"F\" name=\"optFO\">期貨</option>");
                                        sb.append("<option value=\"O\" name=\"optFO\">選擇權</option>");
                                    } 
                                } else { FutureAccounts= []; }
                                $("#sltMarket").html(sb.toString());
                                $("#sltMarket option:first").attr("selected", true);
                                $("#sltMarket").change();
                                Init();
                            } else {
                                alert('014-' + jsonResult.Msg);
                                window.location.href = '@Url.Content("~/Login/DoLogout")';
                            }
                        }
                    } catch (e) {
                        HandleError(e);
                    }
                },
                error: function (obj) {
                    HandleAjaxError(obj);
                }
            });
        }
        //載入自選商品
        function GetFavorite() {
            $.ajax({
                type: "POST",
                url: '@Url.Content("~/Data/ESUNFavorite")',
                success: function (jData) {
                    try {
                        var jsonResult = $.parseJSON(jData);
                        if (jsonResult == undefined) { }
                        else {
                            if (jsonResult.Success) {
                                var items = $.parseJSON(jsonResult.Content);
                                var $sltFavoriteGroup = $("#sltFavoriteGroup");
                                var key ="FavoriteGroup";
                                $sltFavoriteGroup.change(function(){
                                    var favoriteGroup =  $(this).find(":selected").data(key);
                                    if (favoriteGroup == undefined) { }
                                    else { BuildUserSymbolList($("#divUserFavoriteSymbolList"), favoriteGroup.Symbols); }
                                });
                                for(var ii = 0; ii < items.length; ii++){
                                    var $Obj = $("<option>" + items[ii].Name+ "</option>");
                                    $sltFavoriteGroup.append($Obj);
                                    $Obj.data(key, items[ii]); 
                                }
                                LoadInitUserSymbolList();
                                Init();
                            } else {
                                alert('015-' + jsonResult.Msg);
                                window.location.href = '@Url.Content("~/Login/DoLogout")';
                            }
                        }
                    } catch (e) {
                        HandleError(e);
                    }
                },
                error: function (obj) {
                    HandleAjaxError(obj);
                }
            });
        }
        function GetDBBackupTime() {
            $.ajax({
                type: "POST",
                data:"USID=" + '@userID',
                url: '@Url.Content("~/Data/GetDBBackupDateTime")',
                success: function (jData) {
                    try {
                        var jsonResult = $.parseJSON(jData);
                        if (jsonResult == undefined) { /* alert('取回DB備份時間發生錯誤!!!'); */ }
                        else {
                            if (jsonResult.Success) {
                                var DBBackupDateTime = $.parseJSON(jsonResult.Content);
                                //DBBackupDateTime.IsAdd = true;
                                if (DBBackupDateTime.IsAdd) {
                                    alert('主機系統正在備份中、目前無法新增條件。');
                                }
                                Init();
                            } else {
                                alert('013-取回資料庫備份時間錯誤:' + jsonResult.Msg);
                                window.location.href = '@Url.Content("~/Login/DoLogout")';
                            }
                        }
                    } catch (e) { /* alert('取回DB備份時間發生錯誤、' + e); */ }
                },
                error: function (obj) { /* alert('取回DB備份時間發生錯誤、' + obj); */ }
            });
        }
        function LoginActiveB(State, Message) {
            if (State) {
                $("#divTaskingB").ShowScreenCover("clip");
                $("#LodingBox").draggable({ handle: $("#LodingBoxTitle") });
                $("#LodingBox").css("z-Index", "1000");
                $("#LodingBox").show();
                var top = $(window).height() / 2 - $("#TimeOutBox").height() / 2;
                var left = $(window).width() / 2 - $("#TimeOutBox").width() / 2;
                $("#LodingBox").css("left", left);
                $("#LodingBox").css("top", top);
                if ((Message == undefined) | (Message == null) | (Message == '')) { }
                else { $("#LodingMsg").html(Message); }
            } else {
                $("#divTaskingB").HideScreenCover("clip");
                $("#LodingBox").hide();
            }
        }

        function LoginActive(State, Message) {
            if (State) {
                $("#divTasking").ShowScreenCover("clip");
                $("#LodingBox").draggable({ handle: $("#LodingBoxTitle") });
                $("#LodingBox").css("z-Index", "1000");
                $("#LodingBox").show();
                var top = $(window).height() / 2 - $("#TimeOutBox").height() / 2;
                var left = $(window).width() / 2 - $("#TimeOutBox").width() / 2;
                $("#LodingBox").css("left", left);
                $("#LodingBox").css("top", top);
                if ((Message == undefined) | (Message == null) | (Message == '')) { }
                else { $("#LodingMsg").html(Message); }
            } else {
                $("#divTasking").HideScreenCover("clip");
                $("#LodingBox").hide();
            }
        }

        //初始化資料
        var InitSeq = 0;
        var IsInit = true;
        function Init(){
            if (IsInit) {
                InitSeq++;     
                var title = "";
                switch(InitSeq){
                    case 1:
                        LoginActive(true);
                        title="通知方式";
                        GetUserNotify();                        
                        break;
                    case 2:           
                        title="條件"; 
                        GetMonitor();
                        break;
                    case 3:
                        title="已註冊商品";
                        GetUserConditionGroups();
                        break;
                    case 4:
                        title="商品盒";
                        BuildSymbolMenu(); 
                        break;
                    case 5:
                        title="下單帳號";
                        GetAccountInfo();
                        break;
                    case 6:
                        title="自選商品";
                        GetFavorite();
                        break;
                    case 7:
                        title="市場開收盤";
                        GetSMarketTime();
                        break;
                    default:
                        IsInit = false;
                        if (UserNotifyCount == 0){
                            $("#rbPVNotify").click();
                        }                        
                        $("#divOrderBox").show();
                        LoginActive(false);
                        GetDBBackupTime();
                        break;
                }
                $("#LodingMsg").html("載入[ " + title + " ]資訊中、請稍候...");
                if (InitSeq > 7) { $("#divStatus").html(""); }
                else { $("#divStatus").html('載入' + title + "..."); }
            }
        }
        var aslastText = undefined;
        function SymbolSearch() {
            var text = $("#txtSymbolBoxSearch").val().toUpperCase();
            if (aslastText == text) { return; }
            aslastText = text;
            var isCode = false;
            var canDo = true;
            if ($("[name=rbSymbolBoxSearch]:checked").val() == "1") {
                if (text.length < 2) {
                    canDo = false;
                }
                isCode = true;
            } else {
                if (text.length < 1) {
                    canDo = false;
                }
            }
            var $nodeArray = new Array();
            if (canDo) {
                $("#divTreeMenu > ul > li:visible").each(function () {
                    var nodeKey = $(this).find("[name='lblSH']").attr("NodeKey");
                    var $node = $NowUL.data(nodeKey);
                    if ($node.length > 0) {
                        var $item = undefined;
                        if (isCode) { $item = $node.find("item[code^=" + text + "]:empty"); }
                        else { $item = $node.find("item[name*=" + text + "]:empty"); }
                        if (($item == null) | ($item == undefined)) { }
                        else {
                            $item.each(function () {
                                var $ch = $(this);
                                $nodeArray.push($ch);
                            });
                        }
                    }
                });
            }
            if ($nodeArray.length > 0)
            { BuildNodeListItem($MenuXml, $nodeArray); }
        }
        function formatInt(number,len) {
            var mask = "";
            var returnVal = "";
            for(var i=0;i<len;i++) mask+="0"; 
            returnVal = mask + number; 
            returnVal = returnVal.substr(returnVal.length-len,len); 
            return returnVal;
        }
        function DateAdd(interval, number, date) {
            switch (interval) {
                case "y": {
                    date.setFullYear(date.getFullYear() + number);
                    return date;
                    break;
                }
                case "q": {
                    date.setMonth(date.getMonth() + number * 3);
                    return date;
                    break;
                }
                case "m": {
                    date.setMonth(date.getMonth() + number);
                    return date;
                    break;
                }
                case "w": {
                    date.setDate(date.getDate() + number * 7);
                    return date;
                    break;
                }
                case "d": {
                    date.setDate(date.getDate() + number);
                    return date;
                    break;
                }
                case "h": {
                    date.setHours(date.getHours() + number);
                    return date;
                    break;
                }
                case "m": {
                    date.setMinutes(date.getMinutes() + number);
                    return date;
                    break;
                }
                case "s": {
                    date.setSeconds(date.getSeconds() + number);
                    return date;
                    break;
                }
                default: {
                    date.setDate(d.getDate() + number);
                    return date;
                    break;
                }
            }
        }
        function getFormattedDate(date, sign) {
          var year = date.getFullYear();
          var month = (1 + date.getMonth()).toString();
          month = month.length > 1 ? month : '0' + month;
          var day = date.getDate().toString();
          day = day.length > 1 ? day : '0' + day;
          return year + sign + month + sign + day;
        }
        var BeforeDays = 15;
        function GetNextTradeDay(CurrentDateType) {
            var Result = false;
            var RefDate = getFormattedDate(CurrentDateType, '');
            $.ajax({
                type: "POST",
                data:"USID=" + '@userID',
                url: '@Url.Content("~/Data/GetMarketDateTime")' + "?REFDATE=" + RefDate,
                success: function (jData) {
                    try {
                        var jsonResult = $.parseJSON(jData);
                        Result = $.parseJSON(jsonResult.Content);   //市場開收盤
                        //alert('ToDay is ' + RefDate + ', MarketDateTime.IsTradeDay = ' + MarketDateTime.IsTradeDay);
                        //alert('MarketDateTime.stkSTime=' + MarketDateTime.stkSTime + ', MarketDateTime.stkETime=' + MarketDateTime.stkETime);
                        if (Result == undefined) {  /* alert('取回開收盤時間發生錯誤!!!'); */ }
                        else {
                            if (jsonResult.Success) {
                                var MarketDateTime = $.parseJSON(jsonResult.Content);
                                Result = MarketDateTime.IsTradeDay;
                                if (Result) { 
                                    var BeforeDate = undefined;
                                    if (IsPriceVolumeMode) { BeforeDate = $("#txtEndDate").val(); }
                                    else { BeforeDate = $("#txtOrderDate").val(); }
                                    RefDate = getFormattedDate(CurrentDateType, '/');
                                    $("#txtOrderDate").val(RefDate);
                                    $("#txtEndDate").val(RefDate);
                                    //alert('BeforeDate = ' + BeforeDate + ', RefDate = ' + RefDate);
                                    if (BeforeDate == RefDate) { 
                                        //var CurrentDateType = new Date(CurrentDateTime); 
                                        var BeforTime = MarketDateTime.IISSystemBeforeTime;
                                        var CurrentDateTime = MarketDateTime.IISSystemDate + ' ' + MarketDateTime.IISSystemTime;
                                        //CurrentDateTime = MarketDateTime.IISSystemDate + ' 07:10:10'; //模擬盤前時間
                                        //CurrentDateTime = MarketDateTime.IISSystemDate + ' 14:10:10'; //模擬盤後時間
                                        //CurrentDateTime = MarketDateTime.IISSystemDate + ' 12:10:10';   //模擬盤中時間
                                        //BeforTime = '12:15:10';                                         //模擬盤中時間
                                        var CurrentTimeValue = Date.parse(CurrentDateTime).valueOf();
                                        var Hour = MarketDateTime.stkSTime.substr(11, 8);       //證券開盤時間
                                        var Minute = MarketDateTime.stkETime.substr(11, 8);     //證券收盤時間
                                        var Hs = Hour.split(':');
                                        var Ms = Minute.split(':');
                                        var Bs = BeforTime.split(':');
                                        //alert('Hs.length = ' + Hs.length + ', Ms.length = ' + Ms.length + ', Bs.length = ' + Bs.length);
                                        if ((Hs.length == 3) && (Ms.length == 3) && (Bs.length == 3)) {
                                            var HsValue = new Number(Hs[0]); //parseInt(Hs[0]);
                                            var HfValue = new Number(Ms[0]); //parseInt(Ms[0]);
                                            var Hitems = '';
                                            var ODHour = '';
                                            var ODMinute = '';
                                            var IsTradeTime = false;
                                            //alert('HsValue = ' + HsValue + ', HfValue = ' + HfValue);
                                            for (var i = HsValue; i <= HfValue; i++) {
                                                var hstr = formatInt(i, 2);
                                                Hitems += "<option value='" + hstr + "'"; 
                                                //判斷盤前與收盤時間-------------------------------------
                                                if ((CurrentTimeValue > STimeValue) 
                                                    && 
                                                    (CurrentTimeValue < FTimeValue)) 
                                                {
                                                    //盤中時間,時間帶現在時間加五分
                                                    if (hstr == Bs[0]) {
                                                        ODHour = hstr;
                                                        Hitems += " selected "; 
                                                        IsTradeTime = true;
                                                    }
                                                }
                                                Hitems += ">" + hstr + "</option>";
                                            }
                                            $("#HourList").html(Hitems);
                                            var MsValue = 0; 
                                            var MfValue = 59;
                                            var Mitems = '';
                                            for (var i = MsValue; i <= MfValue; i++) {
                                                var mstr = formatInt(i, 2);
                                                Mitems += "<option value='" + mstr + "'";
                                                //判斷盤前與收盤時間-------------------------------------
                                                if ((CurrentTimeValue > STimeValue) && (CurrentTimeValue < FTimeValue)) {
                                                    //盤中時間,時間帶現在時間加五分
                                                    if (mstr == Bs[1]) { 
                                                        ODMinute = mstr;
                                                        Mitems += " selected "; 
                                                        IsTradeTime = true;
                                                    }
                                                }
                                                Mitems += ">" + mstr + "</option>";
                                            }
                                            if ((ODHour == '') | (ODMinute == '')) { }
                                            else { $("#txtOrderTime").val(ODHour + ':' + ODMinute); }
                                            $("#MinuteList").html(Mitems);
                                            if (IsTradeTime) { }
                                            else {
                                                if (BeforeDays > 0) { 
                                                    if (CurrentTimeValue < STimeValue) { }
                                                    else
                                                    {
                                                        //帶下一營業日
                                                        var AddDays = 1;
                                                        CurrentDateType = DateAdd("d", AddDays, CurrentDateType);
                                                        Result = GetNextTradeDay(CurrentDateType); //1
                                                    }
                                                }
                                            }
                                        }
                                    } else {
                                        var _Hour = MarketDateTime.stkSTime.substr(11, 8);
                                        var _Hs = _Hour.split(':');
                                        var _Minute = MarketDateTime.stkETime.substr(11, 8);                                        
                                        var _Ms = _Minute.split(':');
                                        if ((_Hs.length == 3) && (_Ms.length == 3)) {
                                            //時列表
                                            $("#HourList").html("");
                                            var _HsValue = new Number(_Hs[0]); //parseInt(Hs[0]);
                                            var _HfValue = new Number(_Ms[0]); //parseInt(Ms[0]);
                                            var _Hitems = '';
                                            var _ODHour = '';
                                            var _ODMinute = '';
                                            for (var i = _HsValue; i <= _HfValue; i++) {
                                                var _hstr = formatInt(i, 2);
                                                _Hitems += "<option value='" + _hstr + "'";
                                                _Hitems += ">" + _hstr + "</option>";
                                            }
                                            $("#HourList").html(_Hitems);
                                            //分列表
                                            $("#MinuteList").html("");
                                            var _MsValue = 0; 
                                            var _MfValue = 59;
                                            var _Mitems = '';
                                            for (var i = _MsValue; i <= _MfValue; i++) {
                                                var _mstr = formatInt(i, 2);
                                                _Mitems += "<option value='" + _mstr + "'";
                                                _Mitems += ">" + _mstr + "</option>";
                                            }
                                            $("#MinuteList").html(_Mitems);
                                        }
                                    }
                                } else {                                    
                                    if (BeforeDays > 0) { 
                                        //帶下一營業日
                                        var AddDays = 0;
                                        if (IsPriceVolumeMode) { AddDays = 1; } 
                                        else { AddDays = MarketDateTime.IsTradeDay ? 0 : 1; }
                                        CurrentDateType = DateAdd("d", AddDays, CurrentDateType);
                                        Result = GetNextTradeDay(CurrentDateType); //2
                                    }
                                }
                            } else {
                                alert('016-' + jsonResult.Msg); 
                                window.location.href = '@Url.Content("~/Login/DoLogout")';
                            }
                        }
                    } catch (e) { /* alert('取回開收盤時間發生錯誤、' + e); */ }
                },
                error: function (obj) { /* alert('取回開收盤時間發生錯誤、' + obj); */ }
            });
            BeforeDays = BeforeDays - 1;
            AddButtonDisabled(false);
            return Result;
        }
        function GetSMarketDate(ReferenceDate) {
            //載入開盤時間表
            var RefDate = ReferenceDate;
            if ((RefDate == undefined) | (RefDate == '') | (RefDate == null)) 
            { RefDate = '@DateString'; }
            $.ajax({
                type: "POST",
                data:"USID=" + '@userID' + ",REFDATE=" + RefDate,
                url: '@Url.Content("~/Data/GetMarketDateTime")',
                success: function (jData) {
                    try 
                    {
                        var jsonResult = $.parseJSON(jData);
                        if (jsonResult == undefined) { /* alert('取回開收盤時間發生錯誤!!!'); */ }
                        else {
                            if (jsonResult.Success) {
                                var MarketDateTime = $.parseJSON(jsonResult.Content);   //市場開收盤
                                if (
                                    ((MarketDateTime.stkSTime == null) | (MarketDateTime.stkSTime == undefined) | (MarketDateTime.stkSTime == ''))
                                    |
                                    ((MarketDateTime.stkETime == null) | (MarketDateTime.stkETime == undefined) | (MarketDateTime.stkETime == ''))
                                    )
                                { } else {
                                    if ((MarketDateTime.stkSTime.length == 19) && (MarketDateTime.stkETime.length == 19)) {
                                        //alert('ToDay is ' + RefDate + ', MarketDateTime.IsTradeDay = ' + MarketDateTime.IsTradeDay);
                                        //alert('MarketDateTime.stkSTime=' + MarketDateTime.stkSTime + ', MarketDateTime.stkETime=' + MarketDateTime.stkETime);
                                        STimeValue = Date.parse(MarketDateTime.stkSTime).valueOf();
                                        FTimeValue = Date.parse(MarketDateTime.stkETime).valueOf();
                                        var BeforTime = MarketDateTime.IISSystemBeforeTime;
                                        var CurrentDateTime = MarketDateTime.IISSystemDate + ' ' + MarketDateTime.IISSystemTime;
                                        //alert('CurrentDateTime = ' + CurrentDateTime);
                                        var CurrentDateType = new Date(CurrentDateTime);
                                        //帶下一營業日
                                        var AddDays = 0;
                                        if (IsPriceVolumeMode) { AddDays = 1;} 
                                        else { AddDays = MarketDateTime.IsTradeDay ? 0 : 1; }
                                        CurrentDateType = DateAdd("d", AddDays, CurrentDateType);
                                        GetNextTradeDay(CurrentDateType); //3
                                    }
                                }
                                Init();
                            } else {
                                alert('017-' + jsonResult.Msg);
                                window.location.href = '@Url.Content("~/Login/DoLogout")';
                            }
                        }
                    } catch (e) { /* alert('取回開收盤時間發生錯誤、' + e); */ }
                },
                error: function (obj) { /* alert('取回開收盤時間發生錯誤、' + obj); */ }
            });
            AddButtonDisabled(false);
        }
        function GetSMarketTime(ReferenceDate) {
            //載入開盤時間表
            var RefDate = ReferenceDate;
            if ((RefDate == undefined) | (RefDate == '') | (RefDate == null)) 
            { RefDate = '@DateString'; }
            $.ajax({
                type: "POST",
                data:"USID=" + '@userID' + ",REFDATE=" + RefDate,
                url: '@Url.Content("~/Data/GetMarketDateTime")',
                success: function (jData) {
                    try {
                        var jsonResult = $.parseJSON(jData);
                        if (jsonResult == undefined) { /* alert('取回開收盤時間發生錯誤!!!'); */ }
                        else {
                            if (jsonResult.Success) {
                                var MarketDateTime = $.parseJSON(jsonResult.Content);   //市場開收盤
                                if (
                                    ((MarketDateTime.stkSTime == null) | (MarketDateTime.stkSTime == undefined) | (MarketDateTime.stkSTime == ''))
                                    |
                                    ((MarketDateTime.stkETime == null) | (MarketDateTime.stkETime == undefined) | (MarketDateTime.stkETime == ''))
                                    )
                                { } else {
                                    if ((MarketDateTime.stkSTime.length == 19) && (MarketDateTime.stkETime.length == 19)) {
                                        //alert('MarketDateTime.stkSTime=' + MarketDateTime.stkSTime + ', MarketDateTime.stkETime=' + MarketDateTime.stkETime);
                                        STimeValue = Date.parse(MarketDateTime.stkSTime).valueOf();
                                        FTimeValue = Date.parse(MarketDateTime.stkETime).valueOf();
                                        var CurrentDateTime = MarketDateTime.IISSystemDate + ' ' + MarketDateTime.IISSystemTime;
                                        var CurrentTimeValue = Date.parse(CurrentDateTime).valueOf();
                                        //盤後帶下一營業日
                                        if (CurrentTimeValue > FTimeValue) {
                                            BeforeDays = 15;
                                            //帶下一營業日
                                            var AddDays = 0;
                                            if (IsPriceVolumeMode) { AddDays = 1;} 
                                            else { AddDays = MarketDateTime.IsTradeDay ? 0 : 1; }
                                            CurrentDateType = DateAdd("d", AddDays, CurrentDateType);
                                            GetNextTradeDay(CurrentDateType); //4
                                        }
                                    }
                                }
                                Init();
                            } else {
                                alert('018-' + jsonResult.Msg);
                                window.location.href = '@Url.Content("~/Login/DoLogout")';
                            }
                        }
                    } catch (e) { /* alert('取回開收盤時間發生錯誤、' + e); */ }
                },
                error: function (obj) { /* alert('取回開收盤時間發生錯誤、' + obj); */ }
            });
            AddButtonDisabled(false);
        }
        
        $(function () {
            Init();
            if (IsPriceVolumeMode == 'true') { $("#divProductBox").show(); }
            else { $("#divProductBox").hide(); }
            $("#HourList, #MinuteList").change(
                function() {
                    var Hour = $("#HourList").val();
                    var Minute = $("#MinuteList").val();
                    $("#txtOrderTime").val(Hour + ':' + Minute);
                }
            );
            $("#txtEndDate").datepicker({
                beforeShow: function (input, inst) {
                    setTimeout(function () {
                        var position = $("#txtEndDate").offset();
                        var top =  position.top + $("#txtEndDate").height() -  inst.dpDiv.height() - 2;
                        var left= position.left + $("#txtEndDate").width() + 2;
                        inst.dpDiv.css({
                            top: top,
                            left: left
                        });
                    }, 0);
                }
            });
            $("#txtEndDate").keydown(
                function() {
                    return false;
                }
            );
            $("#txtOrderDate").keydown(
                function() {
                    return false;
                }
            );
            $("#txtOrderDate").datepicker();
            $('#txtConditionSymbolID').blur(function () {
                CheckConditionSymbol(this);
            });
            $('#txtConditionSymbolID').keyup(function (event) {
                if (event.keyCode == 13) {
                    $('#txtConditionSymbolName').focus();
                }
            });
            $("#divUserSymbolGroup div").click(function () {
                var $obj = $(this);
                var Flag = $obj.attr("name");
                if ((Flag == null) | (Flag == undefined)) { }
                else {
                    $("#divUserSymbolGroup div").attr("class", "divUserSymbolGroupItem");
                    $obj.attr("class", "divUserSymbolGroupSelectedItem");
                    $("#divUserSymbolList > div").css("display", "none");
                    switch (Flag) {
                        case "divUserSymbolGroup_Favorite":
                            $("#divUserSymbolList #divUserFavorite").css("display", "");
                            $("#divFavoriteGroup").show();
                            $("#divUserStockSumGroup").hide();
                            $("#divUserFOSumGroup").hide();
                            $("#sltFavoriteGroup").change();
                            break;
                        case "divUserSymbolGroup_StockSum":
                            $("#divUserSymbolList #divUserStockSumSymbolList").css("display", "");
                            $("#divFavoriteGroup").hide();
                            $("#divUserStockSumGroup").show();
                            $("#divUserFOSumGroup").hide();
                            $("#sltUserStockSumGroup").change();                        
                            break;
                        case "divUserSymbolGroup_FOSum":
                            $("#divUserSymbolList #divUserFOSumSymbolList").css("display", "");
                            $("#divFavoriteGroup").hide();
                            $("#divUserStockSumGroup").hide();
                            $("#divUserFOSumGroup").show();
                            $("#sltUserFOSumGroup").change();
                            break;
                    }
                }
            });
            $("#spnGroupChange input[type='button']").click(
                function () {
                    var title;
                    if (this.id == "btnPriceVolume") {
                        IsPriceVolumeMode = true;
                        var $divOrderBox = $("#divLimitTime").find("#divOrderBox");
                        var $divOrderBoxContainer = $("#divPriceVolume").find("div[name='divOrderBoxContainer']");
                        if ($divOrderBox.length > 0) {
                            $divOrderBox.remove();
                            $divOrderBoxContainer.append($divOrderBox);

                            $("#btnPriceVolume").attr("class", "GroupShowButton");
                            $("#btnLimitTime").attr("class", "GroupHideButton");

                            $("#divPriceVolume").show();
                            $("#divLimitTime").hide();
                            BindingOrderBoxEvent();
                        }
                        /*
                        $("#rbPVNotify").click(function() {
                            if ($(this).val() == "1" && UserNotifyCount == 0) {
                                alert("無通知設定。");
                            }
                        });
                        */
                        title="價量設定";
                    } else {
                        IsPriceVolumeMode = false;
                        var $divOrderBox = $("#divPriceVolume").find("#divOrderBox");
                        var $divOrderBoxContainer = $("#divLimitTime").find("div[name='divOrderBoxContainer']");
                        if ($divOrderBox.length > 0) {
                            $divOrderBox.remove();
                            $divOrderBoxContainer.append($divOrderBox);
                            $("#btnPriceVolume").attr("class", "GroupHideButton");
                            $("#btnLimitTime").attr("class", "GroupShowButton");
                            $("#divPriceVolume").hide();
                            $("#divLimitTime").show();
                            BindingOrderBoxEvent();
                        }
                        title="限時設定";
                        /*
                        $("[name='rbLTNotify']").click(function(){                          
                            if($(this).val() == "1" && UserNotifyCount == 0){
                                alert("無通知設定。");
                            }
                        });
                        */
                    }
                    $("#divTitle").html(title);
                }
            );
            $("#btnPriceVolume").click();
            $("[name='rbWatchDateRange']").click(
                function(){
                    if($(this).val() == "1"){
                        $("#rbDefaultStopRule").attr("checked", true);
                        $("[name='rbStopRule']:not(\"#rbDefaultStopRule\")").attr("disabled", true);
                        $("[name='optFO']").attr("disabled", false);
                    }else{
                        $("[name='rbStopRule']:not(\"#rbDefaultStopRule\")").attr("disabled", false);
                        $("[name='optFO']").attr("disabled", true);
                    }
                }
            );
            $("#rbDefaultWatchDateRange").click();
            var pp = "@pp";
            if (pp == "2") {
                $("#btnLimitTime").click();
            } 
            $("#btnConditionShowSymbol").click(function () {
                SelectedFunc = function ($node) {
                    SetSymbolToConditionSymbol($node);
                    HideSymbolBox();
                };
                ShowTreeMenuAllMarkets();
                ShowSymbolBox(false);
            });
            /*
            $("[name='rbFUTP']").click(
                function() {
                    if (this.value == "R") {
                        $("#rbFOkOrderTypeLimitPrice").attr("checked", true);
                        $("#rbFOkOrderTypeLimitPrice").click();
                    }
                }
            );
            */
            //下單條件
            $("[name='rbFUTP']").click(
                function () {
                    var v = $(this).val();
                    switch (v)
                    {
                        case 'R': //ROD
                            $("#rbFOkOrderTypeLimitPrice").attr("checked", true);
                            break;
                        case 'I': //IOC
                            break;
                        case 'F': //FOK
                            break;
                    }
            });
            //種類
            $("[name='rbFOkOrderType']").click(
                function() {
                    var v = $(this).val();
                    var RODChecked = $("[name='rbFUTP']").attr("checked");
                    switch (v)
                    {
                        case 'L': //限價
                            //$("#rbFUTPROD").attr("checked", true);
                            break;
                        case 'M': //市價
                            if (RODChecked == "checked")
                            { $("#rbFUTPIOC").attr("checked", true); }
                            break;
                        case 'P': //範圍市價
                            if (RODChecked == "checked")
                            { $("#rbFUTPIOC").attr("checked", true); }
                            break;
                    }
                }
            );
            $("#divPriceFlag > div").click(function () {
                var $obj = $(this);
                var $div = $("#divPriceFlag");
                $div.find(">.PriceFlagItemSelected").attr("class", "PriceFlagItem");
                $obj.attr("class", "PriceFlagItemSelected");
                var value = $obj.attr("value"); 
                $("#lblPriceFlag").html($obj.text());
                if (value == "0") {
                    $("#txtPrice").attr("disabled", false);
                } else {
                    $("#txtPrice").attr("disabled", true);
                    $("#txtPrice").val("");
                }
                if($div.is(":visible")){
                    $div.hide("blind");
                }
            });
            $("#divPriceFlag > div:first").click();
            $("#btnPriceFlag").click(function () {
                var market = $("#sltMarket").val();
                var canDo = false;
                if(market == "S"){
                    canDo = true;
                } else if(market == "F" || market == "O") {
                    if ($("#rbFOkOrderTypeLimitPrice:checked").length > 0) {
                        canDo = true;
                    }
                }
                if (canDo) {
                    var $div = $("#divPriceFlag");
                    if (!$div.is(":visible")) {
                        $div.css("position", "absolute");
                        var offset = $(this).offset();
                        $div.css("left", offset.left + "px");
                        $div.css("top", (offset.top + $(this).height()) + "px");
                        $div.show("blind");
                    } else { $div.hide("blind"); }
                }
            });
            $("[name='rbOrder']").click(
                function () {
                    if ($("[name='rbOrder']:checked").val() == "0") {
                        $("#rbPVNoNotify").attr("disabled", true);
                        $("#rbPVNotify").attr("checked", true);
                        if ($("#divPVOrderBoxContainer").is(":visible")) {   
                            $("#divPVOrderBoxContainer").hide("blind");
                        }
                    } else {
                       
                        $("#rbPVNoNotify").attr("disabled", false);
                        if (!$("#divPVOrderBoxContainer").is(":visible")) {  
                            $("#divPVOrderBoxContainer").show("blind");
                        }
                    }
                }
            );
            $("#rbNoOrder").click();
            function PopupAllowMessage(AllowAdd, AssignedTime) {
                //if (AllowAdd) {
                    var rbOrder = $("[name='rbOrder']:checked").val();
                    //alert('IsPriceVolumeMode = ' + IsPriceVolumeMode + ', HasCA = ' + HasCA + ', rbOrder = ' + rbOrder);
                    if (rbOrder == "1" || !IsPriceVolumeMode) {
                        if (HasCA) { }
                        else {
                            alert("請先安裝憑證以進行下單設定。");
                            AddButtonDisabled(false);
                            return;
                        }
                        CheckPassword();
                    } else { AddUserConditionGroup(inputObj); }
                //} else { alert('[ ' + AssignedTime + ' ]非交易時間!!!'); }
            }
            $("#rbDefaultWatchLong").click(
                function () {
                    var isLong = $("#rbDefaultWatchLong").attr("checked");
                    if (isLong == "checked") {     
                        var CurrentDate = $("#txtEndDate").val();  
                        var IISDate = '@date';
                        //alert('CurrentDate = ' + CurrentDate + ', IISDate = ' + IISDate);
                        if (CurrentDate == IISDate)             
                        { GetSMarketDate(); }
                    }
                }
            );
            GetSMarketDate();
            $("#btnAdd, #btnAddSecond, #btnAddGenie").click(function () {
                AddButtonDisabled(true);
                $.ajax({
                    type: "POST",
                    data:"USID=" + '@userID',
                    url: '@Url.Content("~/Data/GetDBBackupDateTime")',
                    success: function (jData) {
                        try {
                            var jsonResult = $.parseJSON(jData);
                            if (jsonResult == undefined) { /* alert('取回DB備份時間發生錯誤!!!'); */ }
                            else {
                                if (jsonResult.Success) {
                                    var DBBackupDateTime = $.parseJSON(jsonResult.Content);
                                    //DBBackupDateTime.IsAdd = true;
                                    GRPID = DBBackupDateTime.GroupID;
                                    SYSDATETIME = DBBackupDateTime.SystemDateTime;
                                    if (DBBackupDateTime.IsAdd) {
                                        alert('[ ' + DBBackupDateTime.StartTime + ' ~ ' + DBBackupDateTime.EndTime + ' ]為系統備份時間、暫不允許新增條件。');
                                        AddButtonDisabled(false);
                                    } else {
                                        var MaxConditionCount = @(EagleEyes.Properties.Settings.Default.MaxConditionGroupCount);
                                        LoginActiveB(true, "查詢已設定條件數量中、請稍候...");
                                        $.ajax({
                                            type: "POST",
                                            url: '@Url.Content("~/Data/GetUserConditionGroups")',
                                            success: function (jData) {
                                                try {
                                                    LoginActiveB(false, "查詢已設定的條件數量中、請稍候...");
                                                    var jsonResult = $.parseJSON(jData);
                                                    if (jsonResult == undefined) { }
                                                    else {
                                                        if (jsonResult.Success) {
                                                            var items = $.parseJSON(jsonResult.Content);
                                                            var CurrentQuntity = items.length;
                                                            //alert('items.length = ' + items.length);
                                                            if (CurrentQuntity >= MaxConditionCount) {
                                                                alert("已達可設定的條件上限[ " + MaxConditionCount.toString() + " ]筆。");
                                                                AddButtonDisabled(false);
                                                                GetUserConditionGroups();
                                                            } else  {
                                                                AddButtonDisabled(true);
                                                                var inputObj = GetAddUserConditionGroupInputObj(false);
                                                                if (inputObj == undefined) {
                                                                    AddButtonDisabled(false);
                                                                    return;   
                                                                }
                                                                else {
                                                                    var isLong = $("#rbDefaultWatchLong").attr("checked");
                                                                    if (confirm("確定新增？")) {
                                                                        AddButtonDisabled(false);
                                                                        //載入開盤時間表
                                                                        $.ajax({
                                                                            type: "POST",
                                                                            data:"USID=" + '@userID' + ",REFDATE=00000000",
                                                                            url: '@Url.Content("~/Data/GetMarketDateTime")',
                                                                            success: function (jData) {
                                                                                try {
                                                                                    var jsonResult = $.parseJSON(jData);
                                                                                    if (jsonResult == undefined) { /* alert('取回開收盤時間發生錯誤!!!'); */ }
                                                                                    else {
                                                                                        if (jsonResult.Success) {
                                                                                            var MarketDateTime = $.parseJSON(jsonResult.Content);   //市場開收盤
                                                                                            inputObj = GetAddUserConditionGroupInputObj(false);
                                                                                            var AllowAdd = false;
                                                                                            var CurrentTime = Date.parse(MarketDateTime.IISSystemDate + ' ' + MarketDateTime.IISSystemTime).valueOf();
                                                                                            var StartSTimeValue = Date.parse(MarketDateTime.stkSTime).valueOf();
                                                                                            var FinalSTimeValue = Date.parse(MarketDateTime.stkETime).valueOf();
                                                                                            var StartFTimeValue = Date.parse(MarketDateTime.FutSTime).valueOf();
                                                                                            var FinalFTimeValue = Date.parse(MarketDateTime.FutETime).valueOf();
                                                                                            var AssignedTime = MarketDateTime.IISSystemTime;
                                                                                            var ToDay = "@date";
                                                                                            if (IsPriceVolumeMode) {  
                                                                                                //價量模式-要判斷是否為開盤日                                              
                                                                                                var order = $("[name='rbOrder']:checked").val(); //是否帶下單0=不帶,1=要帶
                                                                                                if (order == "0") { AddUserConditionGroup(inputObj); } 
                                                                                                else {
                                                                                                    //如果是長效單則檢查是否為今日並收盤
                                                                                                    if (isLong == "checked") {
                                                                                                        var FinalDate = $("#txtEndDate").val();
                                                                                                        var AssignedDate =  Date.parse(FinalDate + ' 00:00:00').valueOf();
                                                                                                        var StartDate = new Date(ToDay + ' 00:00:00');
                                                                                                        var EndDate = new Date(FinalDate + ' 00:00:00');
                                                                                                        var DifDays = (EndDate - StartDate) / 86400000;
                                                                                                        if (DifDays > MaxMonitorDays) {
                                                                                                            alert('結束日期不可設定超過( ' + MaxMonitorDays + ' )天。'); 
                                                                                                            $("#txtEndDate").focus();
                                                                                                        } else {  
                                                                                                            var RefDate = getFormattedDate(EndDate, '');
                                                                                                            $.ajax({
                                                                                                                type: "POST",
                                                                                                                data:"USID=" + '@userID',
                                                                                                                url: '@Url.Content("~/Data/GetMarketDateTime")' + "?REFDATE=" + RefDate,
                                                                                                                success: function (jData) {
                                                                                                                    try 
                                                                                                                    {
                                                                                                                        jsonResult = $.parseJSON(jData);
                                                                                                                        MarketDateTime = $.parseJSON(jsonResult.Content);   //市場開收盤
                                                                                                                        if (MarketDateTime == undefined) {  /* alert('取回開收盤時間發生錯誤!!!'); */ }
                                                                                                                        else {
                                                                                                                            if (jsonResult.Success) {
                                                                                                                                //if (MarketDateTime.IsTradeDay) {
                                                                                                                                    AllowAdd = (AssignedDate > CurrentTime);
                                                                                                                                    if (AllowAdd) { PopupAllowMessage(AllowAdd, AssignedTime); }
                                                                                                                                    else { 
                                                                                                                                        alert('結束日期[ ' + FinalDate + ' ]必須大於今日!!!');
                                                                                                                                        $("#txtEndDate").focus();
                                                                                                                                    }
                                                                                                                                //} else { 
                                                                                                                                //    alert('[ ' + FinalDate + ' ]非交易日!!!');
                                                                                                                                //    $("#txtEndDate").focus();
                                                                                                                                //}
                                                                                                                            } else {
                                                                                                                                alert('019-' + jsonResult.Msg);
                                                                                                                                window.location.href = '@Url.Content("~/Login/DoLogout")';
                                                                                                                            }
                                                                                                                        }
                                                                                                                    } catch (e) { /* alert('取回開收盤時間發生錯誤、' + e); */ }
                                                                                                                },
                                                                                                                error: function (obj) { /* alert('取回開收盤時間發生錯誤、' + obj); */ }
                                                                                                            });
                                                                                                        }
                                                                                                    } 
                                                                                                    else 
                                                                                                    {
                                                                                                        //if (MarketDateTime.IsTradeDay) { //是否為開盤日
                                                                                                            switch (inputObj.OMTP) {
                                                                                                                case "E":
                                                                                                                case "S":
                                                                                                                    AllowAdd = ((CurrentTime >= StartSTimeValue) && (CurrentTime <= FinalSTimeValue));
                                                                                                                    break;
                                                                                                                case "O":
                                                                                                                case "F":
                                                                                                                    AllowAdd = ((CurrentTime >= StartFTimeValue) && (CurrentTime <= FinalFTimeValue));
                                                                                                                    break;
                                                                                                                case undefined:
                                                                                                                case '':
                                                                                                                    AllowAdd = true;
                                                                                                                    break;
                                                                                                            }
                                                                                                            PopupAllowMessage(AllowAdd, AssignedTime);
                                                                                                        //} else {
                                                                                                        //    alert('[ ' + MarketDateTime.IISSystemDate + ' ]非交易日!!!');
                                                                                                        //    if (isLong == "checked") { $("#txtEndDate").focus(); }
                                                                                                        //}
                                                                                                    }
                                                                                                }
                                                                                            } 
                                                                                            else 
                                                                                            {
                                                                                                //限時模式-要判斷是否為開盤日
                                                                                                var SettingTime = $.trim($("#HourList").val()) + ':' + $.trim($("#MinuteList").val()); // + ":00";
                                                                                                $("#txtOrderTime").val(SettingTime);
                                                                                                var DDate = $.trim($("#txtOrderDate").val());
                                                                                                var DTime = $.trim($("#txtOrderTime").val()) + ':00';
                                                                                                var ToDay = "@date";
                                                                                                var StartDate = new Date(ToDay + ' 00:00:00');
                                                                                                var EndDate = new Date(DDate + ' 00:00:00');
                                                                                                var DifDays = (EndDate - StartDate) / 86400000;
                                                                                                if (DifDays > MaxMonitorDays) {
                                                                                                    alert('結束日期不可設定超過( ' + MaxMonitorDays + ' )天。'); 
                                                                                                    $("#txtOrderDate").focus();
                                                                                                } else {
                                                                                                    AssignedTime = DTime;
                                                                                                    var ThisDate = Date.parse(MarketDateTime.IISSystemDate + ' 00:00:00').valueOf();
                                                                                                    var SettingDate = Date.parse(DDate + ' 00:00:00').valueOf();
                                                                                                    var DateString = $.trim($("#txtOrderDate").val());
                                                                                                    if (SettingDate >= ThisDate) {                                                        
                                                                                                        var AssignDate = new Date(DateString);
                                                                                                        AssignDate = getFormattedDate(AssignDate, '');
                                                                                                        $.ajax({
                                                                                                            type: "POST",
                                                                                                            data:"USID=" + '@userID' + "&REFDATE=" + AssignDate,
                                                                                                            url: '@Url.Content("~/Data/GetMarketDateTime")',
                                                                                                            success: function (jData) {
                                                                                                                try {
                                                                                                                    var jsonResult = $.parseJSON(jData);
                                                                                                                    if (jsonResult == undefined) { }
                                                                                                                    else {
                                                                                                                        if (jsonResult.Success) {
                                                                                                                            var AssignedDate = $.parseJSON(jsonResult.Content);   //市場開收盤
                                                                                                                            CurrentTime = Date.parse(DateString + ' ' + DTime).valueOf();
                                                                                                                            StartSTimeValue = Date.parse(AssignedDate.stkSTime).valueOf();
                                                                                                                            FinalSTimeValue = Date.parse(AssignedDate.stkETime).valueOf();
                                                                                                                            StartFTimeValue = Date.parse(AssignedDate.FutSTime).valueOf();
                                                                                                                            FinalFTimeValue = Date.parse(AssignedDate.FutETime).valueOf();
                                                                                                                            //alert('CurrentTime=' + CurrentTime + ', StartSTimeValue=' + StartSTimeValue + ', FinalSTimeValue=' + FinalSTimeValue);
                                                                                                                            //if (AssignedDate.IsTradeDay) { //是否為開盤日
                                                                                                                                inputObj = GetAddUserConditionGroupInputObj(false);
                                                                                                                                switch (inputObj.OMTP) {
                                                                                                                                    case "E":
                                                                                                                                    case "S":
                                                                                                                                        AllowAdd = ((CurrentTime >= StartSTimeValue) && (CurrentTime <= FinalSTimeValue));
                                                                                                                                        break;
                                                                                                                                    case "O":
                                                                                                                                    case "F":
                                                                                                                                        AllowAdd = ((CurrentTime >= StartFTimeValue) && (CurrentTime <= FinalFTimeValue));
                                                                                                                                        break;
                                                                                                                                    case undefined:
                                                                                                                                    case '':
                                                                                                                                        AllowAdd = true;
                                                                                                                                        break;
                                                                                                                                }
                                                                                                                                if (AllowAdd) {
                                                                                                                                    if ((DTime.length > 0) && (DTime.length < 6)) { MarketDateTime.IISSystemTime = DTime + ":00";  }
                                                                                                                                    else { MarketDateTime.IISSystemTime = DTime; }
                                                                                                                                    if (MarketDateTime.IISSystemTime.length > 8) {
                                                                                                                                        alert('[ ' + MarketDateTime.IISSystemTime + ' ]錯誤的時間格式!!!');
                                                                                                                                    } 
                                                                                                                                    else 
                                                                                                                                    {
                                                                                                                                        if (ToDay == DateString) {
                                                                                                                                            CurrentTime = Date.parse(MarketDateTime.IISSystemDate + ' ' + MarketDateTime.IISSystemTime).valueOf();
                                                                                                                                            //alert('CurrentTime=' + CurrentTime + ', StartSTimeValue=' + StartSTimeValue + ', FinalSTimeValue=' + FinalSTimeValue);
                                                                                                                                            //限時模式
                                                                                                                                            switch (inputObj.OMTP) {
                                                                                                                                                case "E":
                                                                                                                                                case "S":
                                                                                                                                                    AllowAdd = ((CurrentTime >= StartSTimeValue) && (CurrentTime <= FinalSTimeValue));
                                                                                                                                                    break;
                                                                                                                                                case "O":
                                                                                                                                                case "F":
                                                                                                                                                    AllowAdd = ((CurrentTime >= StartFTimeValue) && (CurrentTime <= FinalFTimeValue));
                                                                                                                                                    break;
                                                                                                                                                case undefined:
                                                                                                                                                case '':
                                                                                                                                                    AllowAdd = true;
                                                                                                                                                    break;
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                PopupAllowMessage(AllowAdd, AssignedTime);
                                                                                                                            //} else {
                                                                                                                            //    alert('[ ' + DateString + ' ]非交易日!!!');
                                                                                                                            //    $("#txtOrderDate").focus();
                                                                                                                            //}
                                                                                                                        } else {
                                                                                                                            alert('020-' + jsonResult.Msg);
                                                                                                                            window.location.href = '@Url.Content("~/Login/DoLogout")';
                                                                                                                        }
                                                                                                                    }
                                                                                                                } catch (e) { /* alert('取回開收盤時間發生錯誤B、' + e); */ }
                                                                                                            },
                                                                                                            error: function (obj) { }
                                                                                                        });
                                                                                                    } else {
                                                                                                        alert("設定日期[ " + DateString + " ]不可小於今日[ " + MarketDateTime.IISSystemDate + " ]。");
                                                                                                        $("#txtOrderDate").focus();
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        } else {
                                                                                            alert('021-' + jsonResult.Msg);
                                                                                            window.location.href = '@Url.Content("~/Login/DoLogout")';
                                                                                        }
                                                                                    }
                                                                                    AddButtonDisabled(false);
                                                                                } catch (e) { 
                                                                                    /* alert('取回開收盤時間發生錯誤、' + e); */ 
                                                                                    AddButtonDisabled(false);
                                                                                }
                                                                            },
                                                                            error: function (obj) { 
                                                                                /* alert('取回開收盤時間發生錯誤、' + obj); */ 
                                                                                AddButtonDisabled(false);
                                                                            }
                                                                        });
                                                                    } else { AddButtonDisabled(false); }
                                                                }
                                                            }
                                                        } else {
                                                            alert('013-要求目前條件數量錯誤:' + jsonResult.Msg);
                                                            window.location.href = '@Url.Content("~/Login/DoLogout")';
                                                        }
                                                    }
                                                    Init();
                                                } catch (e) {
                                                    HandleError(e);
                                                }
                                            },
                                            error: function (obj) {
                                                HandleAjaxError(obj);
                                            }
                                        });         
                                    }
                                } else {
                                    alert('013-取回資料庫備份時間錯誤:' + jsonResult.Msg);
                                    window.location.href = '@Url.Content("~/Login/DoLogout")';
                                }
                            }
                        } catch (e) { /* alert('取回DB備份時間發生錯誤、' + e); */ }
                    },
                    error: function (obj) { /* alert('取回DB備份時間發生錯誤、' + obj); */ }
                });       
            });
            $("#btnDel").click(function () {
                $("#btnDel").attr("disabled", true);
                if (confirm("是否刪除此條件？")) {
                    DelUserConditionGroup();
                }
                $("#btnDel").attr("disabled", false);
            });
            $("#btnDelAll").click(function () {
                $("#btnDelAll").attr("disabled", true);
                if (confirm("是否刪除全部條件？")) {
                    DelAllUserConditionGroups();
                }
                $("#btnDelAll").attr("disabled", false);
            });
            $("#btnUpdate").click(function () {
                UpdateUserConditionGroups();
            });
            $("#btnClear").click(function () {
                Clear(false);
            });
            $("#btnEditFavorite").click(function () {
                location.href="@Url.Content("~/Monitor/Favorite")";
            });
            $("#btnGetSymbolQuotation").click(
                function(){
                    $("#btnGetSymbolQuotation").attr("disabled", true);
                    GetSymbolQuotation();
                    $("#btnGetSymbolQuotation").attr("disabled", false);
                }
            );
            $("#btnCheckPassword").click(
                function(){
                    DoCheckPassword();
                }
            );
            $("#txtPassword").keyup(
                function(event){                           
                    if (event.keyCode == 13) {
                        $("#btnCheckPassword").click();
                    }
                }
            );
            $("#btnCancelCheckPassword").click(
                function(){
                    AddButtonDisabled(false);
                    $("#divCheckPassword").hide();
                    $("#divCover").HideScreenCover("clip");
                }
            );
            $("#sltUserStockSumGroup").change(function() {              
                SetOrderBoxAccount($(this));
            });
            $("#sltUserFOSumGroup").change(function() {
                SetOrderBoxAccount($(this));
            });
            $("#btnSymbolBoxSearch").click(function() {
                SymbolSearch();
            });
            $('#txtSymbolBoxSearch').keyup(function (event) {
                if (event.keyCode == 13) {
                    SymbolSearch();
                }
            });
        });
    </script>
}
<div>
    <span class="menu01">您現在位置：雲端秘書＞監控設定＞ </span>
    <div id="divTitle" style="display: inline; color: #ff9933">
    </div>
    <div id="divStatus" style="display: inline;">
    </div>
    <br />
    <span id="spnGroupChange" style="display: none">
        <input id="btnPriceVolume" type="button" value="價量設定" class="bord" style="cursor:pointer" />
        <input id="btnLimitTime" type="button" value="限時下單" class="bord" style="cursor:pointer" />
    </span>
</div>
<input type="hidden" id="LimitDays" value="@EagleEyes.Properties.Settings.Default.MonitorQueryLimitDays" />
<table style="width: 100%;">
    <tr>
        <td align="left" style="height: 350px;">
            <div style="margin-top: 12px;">
                <div class="sub_title" style="height: 28px;">
                    <img src="@Url.Content("~/images/ic_02.jpg")" width="16" height="16" align="absmiddle" />
                    <font color="#dc143c">
                        步驟一：選擇商品
                    </font>
                    <input type="button" class="bord_B" value="重設" id="btnClear" style="width:40px; cursor:pointer" />
                </div>
                <!--- 價量設定視窗 --->              
                <div align="center" id="divUserSymbols" style="float: left; width: 220px; background: #F0F0F0; border:1px solid gray" class="tbList" >
                    <div align="center" id="divProductBox">
                        <table width="99%">
                            <tr>
                                <td align="center" valign="middle">
                                    <input type="text" class="bord_F" style="width:92px; margin: 0px; text-transform: uppercase; text-align:center"
                                        id="txtConditionSymbolID" />
                                </td>
                                <td align="center" valign="middle" style="padding-top:4px">
                                    <img style="width:18px; height:18px; cursor:pointer" id="btnConditionShowSymbol"  src="@Url.Content("~/images/SYMBOL_EN.BMP")"  alt="..." title="選擇股票..." />
                                </td>
                                <td align="center" valign="middle">
                                    <input type="text" class="bord_F" style="width:92px; margin: 0px; text-align:center" id="txtConditionSymbolName"
                                        readonly="readonly" />
                                </td>
                            </tr>
                        </table>
                        <input type="hidden" id="hdConditionSymbolMarket" />
                    </div>
                    <div align="right" id="divUserSymbolGroup" style="padding-left:2px">
                        <div class="divUserSymbolGroupSelectedItem" name="divUserSymbolGroup_Favorite" style="width:70px">
                            <p align="center" valign="middle" style="padding-top:2px">
                            雲端自選
                            </p>
                        </div>
                        <div class="divUserSymbolGroupItem" name="divUserSymbolGroup_StockSum" style="width:70px">
                            <p align="center" valign="middle" style="padding-top:2px">
                            證券庫存
                            </p>
                        </div>
                        @if (isPriveVolumeMode)
                        {
                            <div class="divUserSymbolGroupItem" name="divUserSymbolGroup_FOSum" style="width:70px">
                                <p align="center" valign="middle" style="padding-top:2px">
                                期權部位
                                </p>
                            </div>
                        }
                        else
                        {
                            <div class="divUserSymbolGroupItem" style="width:70px">
                            </div>
                        }
                    </div>
                    <div id="divUserSymbolCategoryGroup">
                        <div id="divFavoriteGroup" style="float:left; padding-left:2px; padding-top:1px">
                            <label style="float:left">
                            群組：
                            </label>                            
                            <select style="float:left; width:90px" id="sltFavoriteGroup" class="bord_F">
                            </select>
                            <input type="button" class="bord" id="btnEditFavorite" value="編輯雲端自選" style="float: left; width: 85px; visibility:hidden; cursor:pointer" />
                        </div>
                        <div id="divUserStockSumGroup" style="clear: both; display: none; padding-left:2px; padding-top:1px">
                            <label style="float:left">
                            證券帳號：
                            </label>
                            <select style="float: left; width: 115px" name="sltUserSumAccount" id="sltUserStockSumGroup" class="bord_F">
                            </select>
                        </div>
                        <div id="divUserFOSumGroup" style="clear: both; display: none; padding-left:2px; padding-top:1px">
                            <label style="float:left">
                            期權帳號：
                            </label>
                            <select style="float: left; width: 115px" name="sltUserSumAccount" id="sltUserFOSumGroup" class="bord_F">
                            </select>
                        </div>
                    </div>
                    <div align="left" id="divUserSymbolList" style="clear: both; width: 215px; height: 300px">
                        <div id="divUserFavorite">
                            <div id="divUserFavoriteSymbolList">
                            </div>
                        </div>
                        <div id="divUserStockSumSymbolList" style="display: none">
                        </div>
                        <div id="divUserFOSumSymbolList" style="display: none">
                        </div>
                    </div>
                </div>
                <div id="divCondition" style="float: left; width: 520px; margin-left: 5px">
                    <div id="divPriceVolume">
                        <div style="float: left; width: 245px">
                            <div style="float: left; width: 100%">
                                <div class="sub_title" style="height: 28px;">
                                    <img src="@Url.Content("~/images/ic_02.jpg")" width="16" height="16" align="absmiddle" /><font color="#dc143c">
                                    步驟二：條件設定
                                    </font>
                                </div>
                                <div id="divPVConditions">
                                </div>
                                <label style="font-weight: bold; color: red">
                                    註：勾選多條須全部成立才會觸發
                                </label>
                            </div>
                            <div style="clear: both">
                            </div>
                            <div>
                                <div style="margin-top: 20px" class="tb2">
                                    <div class="sub_title" style="height: 28px;">
                                        <img src="@Url.Content("~/images/ic_02.jpg")" width="16" height="16" align="absmiddle" />
                                        <font color="#dc143c">
                                            步驟三：監控時段設定
                                        </font>
                                    </div>
                                    <div>
                                        <label>
                                            <input type="radio" id="rbDefaultWatchDateRange" name="rbWatchDateRange" checked="checked" value="1" />
                                                設定日當日有效(監控到收盤)。
                                            </label>
                                    </div>
                                    <div>
                                        <nobr>
                                            <label>
                                                <input type="radio" id="rbDefaultWatchLong" name="rbWatchDateRange" value="2" />
                                                長效監控(最長可設@(EagleEyes.Properties.Settings.Default.MaxMonitorDays)天)。<br />
                                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PS、期權限當日有效。
                                            </label>
                                            <br />
                                            <label style="margin-left: 25px">
                                                結束日期：
                                            </label>
                                            <input type="text" class="bord_F" id="txtEndDate" value="@date" style="width:70px; text-align:center" readonly="readonly" />
                                        </nobr>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div style="float: left; margin-left: 5px; width: 265px">
                            <div>
                                <div class="tb2">
                                    <div class="sub_title" style="height: 28px;">
                                        <img src="@Url.Content("~/images/ic_02.jpg")" width="16" height="16" align="absmiddle" />
                                        <font color="#dc143c">步驟四：停止監控原則</font>
                                    </div>
                                    <div id="Step4Parent" style="width:240px">
                                        <div id="Step4" style="width:240px">
                                            <div>
                                                <label>
                                                    <input type="radio" id="rbDefaultStopRule" name="rbStopRule" checked="checked" value="1" />
                                                    觸發一次即停止</label>
                                            </div>
                                            <div>
                                                <label>
                                                    <input type="radio" name="rbStopRule" value="2" />
                                                    一天最多觸發一次，直到監控期結束</label>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="sub_title" style="height: 28px;">
                                <img src="@Url.Content("~/images/ic_02.jpg")" width="16" height="16" align="absmiddle" /><font color="#dc143c">
                                步驟五：下單資料設定
                                </font>
                            </div>
                            <div>
                                <label>
                                    <input type="radio" id="rbNoOrder" name="rbOrder" checked="checked" value="0" />
                                    不帶下單</label>
                            </div>
                            <div>
                                <label>
                                    <input type="radio" id="rbDoOrder" name="rbOrder" value="1" />
                                    觸發後進行以下內容委託</label>
                            </div>
                            <div name="divOrderBoxContainer" id="divPVOrderBoxContainer" style="margin-top: 10px; display: none">
                            </div>
                            <div style="clear: both;">
                            </div>
                            <div class="sub_title" style="height: 28px;">
                                <img src="@Url.Content("~/images/ic_02.jpg")" width="16" height="16" align="absmiddle" /><font color="#dc143c">
                                步驟六：監控條件觸發通知設定
                                </font>
                            </div>
                            <table width="100%">
                                <tr>
                                    <td>
                                        <label>
                                            <input type="radio" id="rbPVNoNotify" name="rbPVNotify" value="0" />
                                            不需通知，會自行查看結果
                                        </label>
                                    </td>
                                    <td valign="bottom" rowspan="2" style="text-align:right">
                                        <input type="button" value="新增" class="bord_B" id="btnAdd" style="cursor:pointer" />
                                        <input type="button" value="新增" class="bord_B" id="btnAddBusy" style="display:none; cursor:wait; background-color:gray;" />
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        <label>
                                            <input type="radio" id="rbPVNotify" name="rbPVNotify" checked="checked" value="1" />
                                            觸發後依通知設定進行通知
                                        </label>
                                    </td>
                                    <td rowspan="2">
                                    </td>
                                </tr>
                            </table>
                        </div>
                    </div>
                    <!--- 限時設定視窗 --->
                    <div id="divLimitTime" style="display: none; text-align: center;">
                        <input type="hidden" id="hdLimitTimeOrderConditionID" value="@EagleEyes.Properties.Settings.Default.LimitTimeOrderConditionID" />
                        <div class="sub_title" style="height: 28px; margin-left:128px">
                            <table width="100%">
                                <tr>
                                    <td align="left">
                                        <img src="@Url.Content("~/images/ic_02.jpg")" width="16" height="16" align="absmiddle" />
                                        <font color="#dc143c">
                                            步驟二：下單資料設定(僅供股票整股委託設定)
                                        </font>
                                    </td>
                                </tr>
                            </table>
                        </div>
                        <div id="Step2LimitParent">
                            <div id="Step2Limit">
                                <div name="divOrderBoxContainer" class="tb2" style="width: 260px; margin: 0 auto">
                                    <div id="divOrderBox" class="OrderBoxNone" style="border:1px solid black; padding:3px; display:none">
                                        <div>
                                            <select id="sltMarket" class="bord_F" style="float: left">
                                            </select>
                                            <select id="sltAccount" class="bord_F" style="float: left; width:120px">
                                            </select>
                                        </div>
                                        <div style="clear: both">
                                            <div>
                                                <table width="100%">
                                                    <tr>
                                                        <td style="white-space:nowrap">商品：</td>
                                                        <td>
                                                            <input type="text" class="bord_F" style="width: 80px; text-transform: uppercase; text-align:center"
                                                                id="txtOrderSymbolID" />
                                                        </td>
                                                        <td>
                                                            <img id="btnOrderBoxShowSymbol" style="margin-top:6px; width:18px; height:18px; cursor:pointer"  src="@Url.Content("~/images/SYMBOL_EN.BMP")" alt="..." title="選擇商品..." />
                                                        </td>
                                                        <td>
                                                            <input type="text" class="bord_F" style="width: 80px; margin-left: 2px; text-align:center" id="txtOrderSymbolName" readonly="readonly" />
                                                        </td>
                                                    </tr>
                                                </table>
                                                <input type="hidden" id="hdOrderSymbolMarket" />
                                            </div>
                                        </div>
                                        <div style="clear: both">
                                            <div style="float: left">
                                                <div id="divStockOrderType">
                                                    <div style="float: left">
                                                        種類：
                                                    </div>
                                                    <label>
                                                        <input type="radio" id="rbDefaultStockOrderType" name="rbStockOrderType" checked="checked"
                                                            value="0" />現股</label>
                                                    <label id="lblStockOrderTypeMargin1">
                                                        <input type="radio" id="rbStockOrderTypeMargin1" name="rbStockOrderType" value="3" />融資</label>
                                                    <label id="lblStockOrderTypeMargin2">
                                                        <input type="radio" id="rbStockOrderTypeMargin2" name="rbStockOrderType" value="4" />融券</label>
                                                </div>
                                                <div id="divFUTP">
                                                    <div style="float: left">
                                                        下單條件：
                                                    </div>
                                                    <label>
                                                        <input type="radio" id="rbFUTPROD" name="rbFUTP" value="R" checked="checked" />ROD</label>
                                                    <label>
                                                        <input type="radio" id="rbFUTPIOC" name="rbFUTP" value="I" />IOC</label>
                                                    <label>
                                                        <input type="radio" id="rbFUTPFOK" name="rbFUTP" value="F" />FOK</label>
                                                </div>
                                                <div id="divFTDTP">
                                                    <div style="float: left">
                                                        新平倉：
                                                    </div>
                                                    <label>
                                                        <input type="radio" id="rbFTDTPAuto" name="rbFTDTP" checked="checked" value="" />自動</label>
                                                    <label>
                                                        <input type="radio" id="rbFTDTPOpen" name="rbFTDTP" value="0" />新倉</label>
                                                    <label>
                                                        <input type="radio" id="rbFTDTPClose" name="rbFTDTP" value="1" />平倉</label>
                                                    <label id="lblFUTPDT">
                                                        <input type="radio" id="rbFUTPDT" name="rbFTDTP" value="2" />期貨當沖</label>

                                                </div>
                                                <div id="divFOOrderType" style="display: none">
                                                    <div style="float: left">種類：</div>
                                                    <label>
                                                        <input type="radio" name="rbFOkOrderType" id="rbFOkOrderTypeLimitPrice" value="L" checked="checked" />限價
                                                    </label>
                                                    <label>
                                                        <input type="radio" name="rbFOkOrderType" id="rbDefaultFOOrderType" value="M" />市價
                                                    </label>
                                                    <label>
                                                        <input type="radio" name="rbFOkOrderType" id="rbFOkOrderTypeRangeMarketPrice" value="P" />範圍市價
                                                    </label>
                                                </div>
                                            </div>
                                        </div>
                                        <div style="clear: both">
                                            <div style="float: left" id="divQtyTitle">
                                            </div>
                                            <div style="float: left">
                                                <input type="text" class="bord_F" style="width: 25px; text-align:center" id="txtQty" maxlength="3" />
                                            </div>
                                            <div style="float: left">
                                                價格：
                                            </div>
                                            <div style="float: left">
                                                <input type="text" class="bord_F" style="width: 60px; text-align:center" id="txtPrice" maxlength="10" />
                                            </div>
                                            <div style="float: left">
                                                <img class="bord"  id="btnPriceFlag" src="@Url.Content("~/images/GET.BMP")" alt="P" style="cursor:pointer" title="選擇價位條件" />
                                                <div id="divPriceFlag" style="display: none; background: lightblue">
                                                    <div value="0" id="divLimitPriceFlagItem" class="PriceFlagItem" style="border-top:1px solid gray; border-bottom:1px solid gray; border-left:1px solid gray; border-right:1px solid gray; width:48px; text-align:center">
                                                        限價
                                                    </div>
                                                    <div value="9" class="PriceFlagItem" style="border-bottom:1px solid gray; border-left:1px solid gray; border-right:1px solid gray; width:48px; text-align:center">
                                                        漲停
                                                    </div>
                                                    <div value="1" class="PriceFlagItem" style="border-bottom:1px solid gray; border-left:1px solid gray; border-right:1px solid gray; width:48px; text-align:center;">
                                                        跌停
                                                    </div>
                                                    <div value="5" class="PriceFlagItem" style="border-bottom:1px solid gray; border-left:1px solid gray; border-right:1px solid gray; width:48px; text-align:center">
                                                        平盤
                                                    </div>
                                                </div>
                                            </div>
                                            <div style="float: left">
                                                <label
                                                    id="lblPriceFlag">
                                                </label>
                                            </div>
                                            <br />
                                        </div>
                                        <div id="BuySellDiv" style="clear: both; text-align:right">
                                            <div style="display: inline">
                                                <!-- <img id="btnBuy" src="@Url.Content("~/Images/Buy.png")" align="absmiddle" style="cursor:pointer" /> -->
                                                <input type="button" class="bord" value="買進" id="btnBuy" style="width:48px; cursor:pointer" />
                                            </div>
                                            <div style="display: inline">
                                                <!-- <img id="btnSell" src="@Url.Content("~/Images/Sell.png")" align="absmiddle" style="cursor:pointer" /> -->
                                                <input type="button" class="bord" value="賣出" id="btnSell" style="width:48px; cursor:pointer" />
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <br />
                        <div class="sub_title" style="height: 28px; margin-left:128px">
                            <table width="100%">
                                <tr>
                                    <td align="left">
                                        <img src="@Url.Content("~/images/ic_02.jpg")" width="16" height="16" align="absmiddle" />
                                        <font color="#dc143c">
                                            步驟三：下單時間設定(不可設遠於@(EagleEyes.Properties.Settings.Default.MaxMonitorDays)天之後)
                                        </font>
                                    </td>
                                </tr>
                            </table>
                        </div>
                        <div style="height: 28px; margin-left:128px">
                            <table width="100%">
                                <tr>
                                    <td align="left">
                                        日期：
                                        <input type="text" class="bord_F" id="txtOrderDate" readonly="readonly" value="@date" style="width:70px; text-align:center" />
                                        時間：
                                        <select id="HourList" class="bord_F" style="width:42px">
                                        </select>
                                        :
                                        <select id="MinuteList" class="bord_F" style="width:42px">
                                        </select>
                                        <input type="text" class="bord_F" id="txtOrderTime" value="@orderTime" style="width: 70px; text-align:center; visibility:hidden" />
                                    </td>
                                </tr>
                            </table>
                            <div style="height:4px"></div>
                            <table width="100%">
                                <tr>
                                    <td align="left">
                                        <label style="margin-top:8px">請注意：</label>
                                    </td>
                                </tr>
                                <tr>
                                    <td align="left" style="padding-left:12px">
                                        <label style="margin-top:8px">一、開盤前：預設現在日期及開盤時間。</label><br />
                                        <label style="padding-top:8px">二、盤　中：預設帶今日日期加現在時間後五分。</label><br />
                                        <label style="padding-top:8px">三、收盤後：預設下個交易日期及開盤時間。</label>
                                    </td>
                                </tr>
                            </table>
                        </div>
                        <div class="sub_title" style="height: 28px; margin-top: 56px; margin-left:128px">
                            <table width="100%">
                                <tr>
                                    <td align="left">
                                        <img src="@Url.Content("~/images/ic_02.jpg")" width="16" height="16" align="absmiddle" />
                                        <font color="#dc143c">步驟四：限時下單觸發通知設定</font>
                                    </td>
                                </tr>
                            </table>
                        </div>
                        <div style="height: 28px; margin-left:128px">
                            <table style="width:264px">
                                <tr>
                                    <td align="left">
                                        <label>
                                            <input type="radio" id="rbLTNotify" name="rbLTNotify" value="0" />
                                            不需通知，會自行查看結果
                                        </label>
                                    </td>
                                    <td align="right" valign="bottom" rowspan="2">
                                        <input type="button" value="新增" class="bord_B" id="btnAddSecond" style="cursor:pointer" />
                                        <input type="button" value="新增" class="bord_B" id="btnAddSecondBusy" style="display:none; cursor:wait; background-color:gray;" />
                                    </td>
                                </tr>
                                <tr>
                                    <td align="left">
                                        <label>
                                            <input type="radio" id="rbLTNotify" name="rbLTNotify" checked="checked" value="1" />
                                            觸發後依通知設定進行通知
                                        </label>
                                    </td>
                                    <td rowspan="2">
                                    </td>
                                </tr>
                            </table>
                        </div>
                    </div>
                    <div style="clear: both;">
                    </div>
                </div>
                <div style="float: right; width: 230px;">
                    <div class="sub_title" style="height: 28px;">
                        <table width="100%">
                            <tr>
                                <td>
                                    <img src="@Url.Content("~/images/ic_02.jpg")" width="16" height="16" align="absmiddle" />
                                    <font color="#dc143c">已註冊商品</font>
                                </td>
                                <td align="right" valign="middle" style="padding-right:4px">
                                    <input type="button" value="刪除" class="bord_B" id="btnDel" style="cursor:pointer" />
                                    <input type="button" value="全刪" class="bord_B" id="btnDelAll" style="cursor:pointer" />
                                </td>
                            </tr>
                        </table>
                    </div>
                    <div id="divUserRegisterSymbols">
                    </div>
                    <div class="tb2">
                        可設定的條件上限：@(EagleEyes.Properties.Settings.Default.MaxConditionGroupCount)組
                    </div>
                </div>
                <div style="float: left; width: 50px; text-align: center; margin-top: 100px">
                </div>
                <div id="divSymbolBox" style="width:502px; clear: both; display: none; position: absolute; border:3px double black">
                    <div id="divSymbolBoxTitle" style="height: 25px; background: #D90C75;">
                        <table width="100%">
                            <tr>
                                <td align="left" valign="middle" style="padding-left:8px; color:White">
                                    商品盒
                                </td>
                                <td align="center" valign="middle" style="width:24px; height:24px">
                                    <input type="button" class="bord" id="btnSymbolBoxClose" value="X" style="height: 20px; width: 20px; display: inline-block; cursor:pointer" />
                                </td>
                            </tr>
                        </table>
                    </div>
                    <div id="divSymbolTree" class="DivSymbolTree" style="clear: both; white-space: nowrap">
                        <table border="0" cellpadding="0" cellspacing="0" style="width: 100%; height: 100%">
                            <tr>
                                <td colspan="2" align="left">
                                    <div style="height:24px; padding-top:8px; padding-left:8px">
                                        <label class="txt_ff" style="color:#009893; cursor:pointer">
                                            <input type="radio" name="rbSymbolBoxSearch" checked="checked" value="1" style="cursor:pointer" />
                                                代碼
                                            </label>
                                        <label class="txt_ff" style="color:#009893; cursor:pointer">
                                            <input type="radio" name="rbSymbolBoxSearch" value="2" style="cursor:pointer" />
                                                名稱
                                            </label>
                                        <input type="text" class="bord_F" id="txtSymbolBoxSearch" style="text-transform: uppercase;" />
                                        <input type="button" class="bord_B" id="btnSymbolBoxSearch" style="width:48px" value="搜尋" />
                                    </div>
                                </td>
                            </tr>
                            <tr>
                                <td valign="top" width="40%" style="padding-left:8px">
                                    <div id="divTreeMenu" class="DivTreeMenu" style="border:1px solid black; height:372px; width:100%">
                                        <ul class="NodeULShow" style="padding-left: 10px;">
                                        </ul>
                                    </div>
                                </td>
                                <td valign="top" width="55%" style="padding-left:8px; padding-right:8px">
                                    <div id="divNodeList" class="DivNodeList" style="overflow: hidden; border:1px solid black; height:372px; width:100%">
                                    </div>
                                </td>
                            </tr>
                            <tr>
                                <td align="right" valign="top" colspan="2" style="padding-right:4px">
                                    <input type="button" class="bord" id="btnSymbolBoxConfirm" style="width:48px" value="確定" style="cursor:pointer" />
                                    <input type="button" class="bord" id="btnSymbolBoxCancel" style="width:48px" value="取消" style="cursor:pointer" />
                                </td>
                            </tr>
                        </table>
                    </div>
                    <div id="divOptionSymbolTMenu" class="DivOptionSymbolTMenu" style="float: left; display: none">
                        <div>
                            <select id="sltOptionGroupMenu" class="bord_F">
                            </select>
                        </div>
                        <div id="divOptionTMenuTitle" class="divOptionTMenuTitle">
                        </div>
                        <div id="divOptionTMenuBody" class="divOptionTMenuBody">
                        </div>
                    </div>
                </div>
                <div id="divCheckPassword" class="CheckPassword" style="display: none">
                    <div>
                    </div>
                    <div>
                        <table width="100%" style="border:3px double #a0a0a0; width:240px; height:100px">
                            <tr>
                                <td class="tb2" align="center" valign="middle">
                                    請輸入登入密碼：
                                </td>
                            </tr>
                            <tr>
                                <td align="center" valign="middle">
                                    <input type="password" id="txtPassword" class="bord_F" />
                                </td>
                            </tr>
                            <tr>
                                <td align="right" valign="top" style="padding-right:48px">
                                    <input type="button" id="btnCheckPassword" value="確定" class="bord" style="width:40px; cursor:pointer" />
                                    <input type="button" id="btnCancelCheckPassword" value="取消" class="bord" style="width:40px; cursor:pointer" />
                                </td>
                            </tr>
                        </table>
                    </div>
                </div>
            </div>
        </td>
    </tr>
    <tr>
        <td style="height: 150px; vertical-align: top;" align="center">
            <div style="margin-left: auto; margin-right: auto; display: inline-block; text-align: left;">
                <div class="tb2" style="width:1024px">
                    <input id="btnGetSymbolQuotation" type="button" value="報價更新" class="bord_B" style="width:80px; cursor:pointer" /><label
                        style="margin-left: 3px">報價更新時間：</label><label id="lblGetSymbolQuotationDateTime"></label>
                </div>
                <div id="divSymbolQuotation">
                </div>
            </div>
        </td>
    </tr>
</table>
<div id="GenieCover" style="margin: 0px; background: #000; z-index: 998; display: none; filter: alpha(opacity = 60); opacity: 0.6;">
</div>
         

